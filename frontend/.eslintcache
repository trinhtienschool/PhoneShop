[{"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\index.js":"1","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\store.js":"2","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\App.js":"3","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reportWebVitals.js":"4","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\cartReducers.js":"5","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\productReducers.js":"6","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\orderReducers.js":"7","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\userReducers.js":"8","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Header.js":"9","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SentimentCircleChart.js":"10","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Footer.js":"11","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\BarChart.js":"12","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SimilarWordCloud.js":"13","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\HomeScreen.js":"14","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\CartScreen.js":"15","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProductScreen.js":"16","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\RegisterScreen.js":"17","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\LoginScreen.js":"18","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProfileScreen.js":"19","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ShippingScreen.js":"20","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"21","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\OrderScreen.js":"22","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\PaymentScreen.js":"23","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\UserListScreen.js":"24","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\UserEditScreen.js":"25","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProductListScreen.js":"26","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\OrderListScreen.js":"27","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProductEditScreen.js":"28","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\SearchScreen.js":"29","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\DashboardScreen.js":"30","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ForgotPasswordScreen.js":"31","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ResetPasswordScreen.js":"32","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SentimentLineChart.js":"33","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SentimentHorizontalBarChart.js":"34","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SearchBox.js":"35","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\Data.js":"36","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Message.js":"37","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Loader.js":"38","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\FormContainer.js":"39","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\cartConstants.js":"40","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\userConstants.js":"41","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\productConstants.js":"42","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\orderConstants.js":"43","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\userActions.js":"44","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\productActions.js":"45","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\orderActions.js":"46","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\utils.js":"47","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Product.js":"48","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Rating.js":"49","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\env.js":"50","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Paginate.js":"51","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\cartActions.js":"52","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\CheckoutSteps.js":"53","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\ProductCarousel.js":"54","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ReviewListScreen.js":"55"},{"size":614,"mtime":1658769422026,"results":"56","hashOfConfig":"57"},{"size":3539,"mtime":1662438774147,"results":"58","hashOfConfig":"57"},{"size":4289,"mtime":1662439196513,"results":"59","hashOfConfig":"57"},{"size":375,"mtime":1658769422028,"results":"60","hashOfConfig":"57"},{"size":1545,"mtime":1658769422026,"results":"61","hashOfConfig":"57"},{"size":12022,"mtime":1662436650205,"results":"62","hashOfConfig":"57"},{"size":4276,"mtime":1658769422027,"results":"63","hashOfConfig":"57"},{"size":5192,"mtime":1659977460124,"results":"64","hashOfConfig":"57"},{"size":10291,"mtime":1659608096624,"results":"65","hashOfConfig":"57"},{"size":8580,"mtime":1659897127494,"results":"66","hashOfConfig":"57"},{"size":4001,"mtime":1661619793291,"results":"67","hashOfConfig":"57"},{"size":642,"mtime":1659706778567,"results":"68","hashOfConfig":"57"},{"size":4971,"mtime":1659985681235,"results":"69","hashOfConfig":"57"},{"size":17177,"mtime":1661629315943,"results":"70","hashOfConfig":"57"},{"size":5427,"mtime":1659603917948,"results":"71","hashOfConfig":"57"},{"size":19732,"mtime":1662479458305,"results":"72","hashOfConfig":"57"},{"size":4094,"mtime":1659603917666,"results":"73","hashOfConfig":"57"},{"size":2739,"mtime":1659978296354,"results":"74","hashOfConfig":"57"},{"size":7003,"mtime":1659603917832,"results":"75","hashOfConfig":"57"},{"size":3320,"mtime":1659603917787,"results":"76","hashOfConfig":"57"},{"size":7192,"mtime":1659947334671,"results":"77","hashOfConfig":"57"},{"size":10127,"mtime":1662697233789,"results":"78","hashOfConfig":"57"},{"size":2920,"mtime":1659950469680,"results":"79","hashOfConfig":"57"},{"size":8972,"mtime":1662220736640,"results":"80","hashOfConfig":"57"},{"size":4022,"mtime":1658769422032,"results":"81","hashOfConfig":"57"},{"size":17842,"mtime":1662220736318,"results":"82","hashOfConfig":"57"},{"size":9325,"mtime":1662220736447,"results":"83","hashOfConfig":"57"},{"size":8471,"mtime":1659598604242,"results":"84","hashOfConfig":"57"},{"size":13482,"mtime":1659607231522,"results":"85","hashOfConfig":"57"},{"size":10331,"mtime":1662220736540,"results":"86","hashOfConfig":"57"},{"size":4604,"mtime":1659975643203,"results":"87","hashOfConfig":"57"},{"size":7156,"mtime":1659981300407,"results":"88","hashOfConfig":"57"},{"size":13218,"mtime":1661026651123,"results":"89","hashOfConfig":"57"},{"size":10812,"mtime":1661027055160,"results":"90","hashOfConfig":"57"},{"size":1871,"mtime":1659532426342,"results":"91","hashOfConfig":"57"},{"size":666,"mtime":1659705546379,"results":"92","hashOfConfig":"57"},{"size":240,"mtime":1658769422022,"results":"93","hashOfConfig":"57"},{"size":479,"mtime":1658769422022,"results":"94","hashOfConfig":"57"},{"size":394,"mtime":1658769422021,"results":"95","hashOfConfig":"57"},{"size":294,"mtime":1658769422024,"results":"96","hashOfConfig":"57"},{"size":1956,"mtime":1659977176181,"results":"97","hashOfConfig":"57"},{"size":4075,"mtime":1662436033955,"results":"98","hashOfConfig":"57"},{"size":1270,"mtime":1658769422024,"results":"99","hashOfConfig":"57"},{"size":9930,"mtime":1659981108374,"results":"100","hashOfConfig":"57"},{"size":15603,"mtime":1662436650255,"results":"101","hashOfConfig":"57"},{"size":6285,"mtime":1658769422019,"results":"102","hashOfConfig":"57"},{"size":597,"mtime":1659532956122,"results":"103","hashOfConfig":"57"},{"size":3338,"mtime":1660098078172,"results":"104","hashOfConfig":"57"},{"size":1957,"mtime":1658769422023,"results":"105","hashOfConfig":"57"},{"size":46,"mtime":1658772719422,"results":"106","hashOfConfig":"57"},{"size":767,"mtime":1659593833633,"results":"107","hashOfConfig":"57"},{"size":1365,"mtime":1658769422018,"results":"108","hashOfConfig":"57"},{"size":1645,"mtime":1658769422021,"results":"109","hashOfConfig":"57"},{"size":1469,"mtime":1659460005542,"results":"110","hashOfConfig":"57"},{"size":21342,"mtime":1662481604534,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1l31odc",{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"114"},"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\index.js",[],["254","255"],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\store.js",["256"],"import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n    productRandomReducer,\r\n    productCategoryListReducer,\r\n    productAllListReducer,\r\n    sentimentCircleChartReducer,\r\n    sentimentLineChartReducer,\r\n    sentimentBarChartReducer,\r\n    productIdNameReducer,\r\n    similarWordCloudReducer,\r\n    userBuyProductReducer, reviewAllListReducer, reviewDeleteReducer, reviewUpdateReducer\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer, userForgotPassword, userResetPassword,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productAllList: productAllListReducer,\r\n    reviewAllList: reviewAllListReducer,\r\n    similarWordCloud: similarWordCloudReducer,\r\n    productIdName: productIdNameReducer,\r\n    sentimentCircleChart: sentimentCircleChartReducer,\r\n    sentimentLineChart: sentimentLineChartReducer,\r\n    sentimentBarChart: sentimentBarChartReducer,\r\n    userBuyProduct: userBuyProductReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    reviewDelete: reviewDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    reviewUpdate: reviewUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    productRandom: productRandomReducer,\r\n    productCategoryList:productCategoryListReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userForgotPassword: userForgotPassword,\r\n    userResetPassword: userResetPassword,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\nconst store2 = createStore\r\nexport default store","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\App.js",["257","258","259","260","261"],"import { Container } from 'react-bootstrap'\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport SearchScreen from \"./screens/SearchScreen\";\r\nimport DashboardScreen from \"./screens/DashboardScreen\";\r\nimport BarChart from \"./components/BarChart\";\r\nimport DoughnutChart from \"./components/SentimentCircleChart\";\r\nimport HorizontalBarChart from \"./components/SentimentHorizontalBarChart\";\r\nimport LineChart from \"./components/SentimentLineChart\";\r\nimport SimilarWordCloud from \"./components/SimilarWordCloud\";\r\nimport ForgotPasswordScreen from \"./screens/ForgotPasswordScreen\";\r\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\r\nimport ReviewListScreen from \"./screens/ReviewListScreen\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n\r\n            <Switch>\r\n\r\n          <Route path='/' component={HomeScreen} exact />\r\n                <Route path='/chart' component={SimilarWordCloud} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/forgot-password' component={ForgotPasswordScreen} />\r\n          <Route path='/reset-password/:token' component={ResetPasswordScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n\r\n          \r\n          \r\n           <Route path=\"/search/name\" component={SearchScreen } exact></Route>\r\n            <Route\r\n              path=\"/search/name/:name\"\r\n              component={SearchScreen }\r\n              exact\r\n            ></Route>\r\n            <Route\r\n              path=\"/search/category/:category\"\r\n              component={SearchScreen }\r\n              exact\r\n            ></Route>\r\n            <Route\r\n              path=\"/search/category/:category/name/:name\"\r\n              component={SearchScreen }\r\n              exact\r\n            ></Route>\r\n            <Route\r\n              path=\"/search/category/:category/name/:name/min/:min/max/:max/rating/:rating/order/:order/pageNumber/:pageNumber\"\r\n              component={SearchScreen }\r\n              exact\r\n            ></Route>\r\n\r\n\r\n                          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n            <Route path='/admin/productlist' component={ProductListScreen}  exact/>\r\n\r\n          <Route path='/admin/productlist/page/:pageNum' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n                <Route path='/admin/dashboard' component={DashboardScreen} />\r\n                <Route path='/admin/reviewlist' component={ReviewListScreen}  exact/>\r\n                <Route path='/admin/reviewlist/page/:pageNum' component={ReviewListScreen}/>\r\n\r\n\r\n                </Switch>\r\n\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reportWebVitals.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Header.js",["262","263","264","265","266","267","268","269"],"import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Navbar, Nav, Container, Row, NavDropdown} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport {logout} from '../actions/userActions'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    const cart = useSelector((state) => state.cart);\r\n    const {cartItems} = cart;\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <div style={{marginBottom: \"100px\"}}>\r\n            {/*<header>*/}\r\n            {/*    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>*/}\r\n            {/*        <Container>*/}\r\n            {/*            <LinkContainer to='/'>*/}\r\n            {/*                <Navbar.Brand>Indian Shop</Navbar.Brand>*/}\r\n            {/*            </LinkContainer>*/}\r\n\r\n            {/*            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />*/}\r\n            {/*            <Navbar.Collapse id=\"basic-navbar-nav\">*/}\r\n            {/*                <SearchBox />*/}\r\n            {/*                <Nav className=\"ml-auto\">*/}\r\n\r\n            {/*                    <LinkContainer to='/cart'>*/}\r\n            {/*                        <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>*/}\r\n            {/*                    </LinkContainer>*/}\r\n\r\n            {/*                    {userInfo ? (*/}\r\n            {/*                        <NavDropdown title={userInfo.name} id='username'>*/}\r\n            {/*                            <LinkContainer to='/profile'>*/}\r\n            {/*                                <NavDropdown.Item>Profile</NavDropdown.Item>*/}\r\n            {/*                            </LinkContainer>*/}\r\n\r\n            {/*                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>*/}\r\n\r\n            {/*                        </NavDropdown>*/}\r\n            {/*                    ) : (*/}\r\n            {/*                            <LinkContainer to='/login'>*/}\r\n            {/*                                <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>*/}\r\n            {/*                            </LinkContainer>*/}\r\n            {/*                        )}*/}\r\n\r\n\r\n            {/*                    {userInfo && userInfo.isAdmin && (*/}\r\n            {/*                        <NavDropdown title='Admin' id='adminmenue'>*/}\r\n            {/*                            <LinkContainer to='/admin/userlist'>*/}\r\n            {/*                                <NavDropdown.Item>Users</NavDropdown.Item>*/}\r\n            {/*                            </LinkContainer>*/}\r\n\r\n            {/*                            <LinkContainer to='/admin/productlist'>*/}\r\n            {/*                                <NavDropdown.Item>Products</NavDropdown.Item>*/}\r\n            {/*                            </LinkContainer>*/}\r\n\r\n            {/*                            <LinkContainer to='/admin/orderlist'>*/}\r\n            {/*                                <NavDropdown.Item>Orders</NavDropdown.Item>*/}\r\n            {/*                            </LinkContainer>*/}\r\n\r\n            {/*                        </NavDropdown>*/}\r\n            {/*                    )}*/}\r\n\r\n\r\n            {/*                </Nav>*/}\r\n            {/*            </Navbar.Collapse>*/}\r\n            {/*        </Container>*/}\r\n            {/*    </Navbar>*/}\r\n            {/*</header>*/}\r\n\r\n\r\n            <header>\r\n\r\n\r\n                <nav className=\"navbar fixed-top navbar-expand-lg  navbar-light scrolling-navbar white\">\r\n\r\n                    <div className=\"container\">\r\n\r\n\r\n                        <a className=\"navbar-brand font-weight-bold\" href=\"#\"><strong>Phone Shop</strong></a>\r\n\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                                data-target=\"#navbarSupportedContent-4\"\r\n                                aria-controls=\"navbarSupportedContent-4\" aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n\r\n                        </button>\r\n\r\n\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-4\">\r\n\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n\r\n                                <li className=\"nav-item ml-lg-3\">\r\n\r\n                                    <SearchBox/>\r\n\r\n                                </li>\r\n\r\n\r\n                                <li className=\"nav-item ml-lg-3\">\r\n\r\n\r\n                                    <Link to={`/cart`} className=\"nav-link dark-grey-text font-weight-bold\"><i\r\n                                        className=\"fas fa-shopping-cart blue-text\"></i>\r\n\r\n\r\n                                        {cartItems.length > 0 && (\r\n                                            <span className=\"badge badge-danger badge-pill\">{cartItems.length}</span>\r\n                                        )}\r\n                                        {/*<span className=\"badge badge-danger badge-pill\">43</span>*/}\r\n                                    </Link>\r\n\r\n\r\n                                    {/*                   {cartItems.length > 0 && (*/}\r\n                                    {/*  <span className=\"badge\">{cartItems.length}</span>*/}\r\n                                    {/*)}*/}\r\n\r\n\r\n                                </li>\r\n\r\n                                <li className=\"nav-item dropdown ml-lg-3\">\r\n\r\n                                    {/*    {userInfo ? (*/}\r\n                                    {/*    <NavDropdown title={userInfo.name} id='username'>*/}\r\n                                    {/*        <LinkContainer to='/profile'>*/}\r\n                                    {/*            <NavDropdown.Item>Profile</NavDropdown.Item>*/}\r\n                                    {/*        </LinkContainer>*/}\r\n\r\n                                    {/*        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>*/}\r\n\r\n                                    {/*    </NavDropdown>*/}\r\n                                    {/*) : (*/}\r\n                                    {/*        <LinkContainer to='/login'>*/}\r\n                                    {/*            <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>*/}\r\n                                    {/*        </LinkContainer>*/}\r\n                                    {/*    )}*/}\r\n                                    {/*    */}\r\n                                    {/*    {userInfo && userInfo.isAdmin && (*/}\r\n                                    {/*    <NavDropdown title='Admin' id='adminmenue'>*/}\r\n                                    {/*        <LinkContainer to='/admin/userlist'>*/}\r\n                                    {/*            <NavDropdown.Item>Users</NavDropdown.Item>*/}\r\n                                    {/*        </LinkContainer>*/}\r\n\r\n                                    {/*        <LinkContainer to='/admin/productlist'>*/}\r\n                                    {/*            <NavDropdown.Item>Products</NavDropdown.Item>*/}\r\n                                    {/*        </LinkContainer>*/}\r\n\r\n                                    {/*        <LinkContainer to='/admin/orderlist'>*/}\r\n                                    {/*            <NavDropdown.Item>Orders</NavDropdown.Item>*/}\r\n                                    {/*        </LinkContainer>*/}\r\n\r\n                                    {/*    </NavDropdown>*/}\r\n                                    {/*)}*/}\r\n\r\n\r\n                                    {userInfo ? (\r\n                                        <div>\r\n                                            <a className=\"nav-link dropdown-toggle dark-grey-text font-weight-bold\"\r\n                                               id=\"navbarDropdownMenuLink-4\"\r\n                                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                <i className=\"fas fa-user blue-text\"></i>\r\n                                                {userInfo.name} </a>\r\n\r\n                                            <div className=\"dropdown-menu dropdown-menu-right dropdown-cyan\"\r\n                                                 aria-labelledby=\"navbarDropdownMenuLink-4\">\r\n\r\n                                                <Link to={`/profile`}\r\n                                                      className=\"dropdown-item waves-effect waves-light\">My\r\n                                                    account</Link>\r\n\r\n\r\n\r\n                                                {userInfo.isAdmin && (\r\n                                                    <div>\r\n                                                        <Link to={`/admin/dashboard`}\r\n                                                              className=\"dropdown-item waves-effect waves-light\">Dashboard</Link>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div to={''} className=\"dropdown-item waves-effect waves-light\"\r\n                                                     onClick={logoutHandler}>Log out\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n\r\n                                        <Link to={`/login`} className=\"nav-link dark-grey-text font-weight-bold\"> <i\r\n                                            className=\"fas fa-user blue-text\"></i>\r\n\r\n                                            Login\r\n                                        </Link>\r\n\r\n\r\n                                    )}\r\n\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </nav>\r\n\r\n\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SentimentCircleChart.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"//import React\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {UserData} from \"../Data\";\r\nimport {Chart as ChartJS} from 'chart.js/auto';\r\nimport {listAllProducts, listProductCategories, productsIdName, sentimentCircleChart} from \"../actions/productActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sentimentBarChartReducer, sentimentLineChartReducer} from \"../reducers/productReducers\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\r\nimport us from 'date-fns/locale/en-US';\r\n\r\nregisterLocale('us', us)\r\n\r\nfunction DoughnutChart() {\r\n    const dispatch = useDispatch()\r\n\r\n    //send dispatch load  list products has only id, name to store\r\n    useEffect(() => {\r\n        dispatch(productsIdName())\r\n    }, [dispatch])\r\n\r\n\r\n    //send dispatch load list categories\r\n    useEffect(() => {\r\n        dispatch(listProductCategories());\r\n    }, [dispatch]);\r\n\r\n    //send dispatch load init chart data\r\n    useEffect(() => {\r\n        dispatch(sentimentCircleChart('', ''));\r\n    }, [dispatch]);\r\n\r\n    //get all products id name from store\r\n    const productIdName = useSelector(state => state.productIdName)\r\n    const {loading: loadingProductIdName, error: errorProductIdName, products: productsList} = productIdName\r\n\r\n    //get all category from store\r\n    const category = useSelector(state => state.productCategoryList)\r\n    const {loading: loadingCategory, error: errorCategory, categories: categoryList} = category\r\n\r\n    //get sentiment circle chart from store\r\n    const sentimentCircle = useSelector(state => state.sentimentCircleChart)\r\n const {loading: loadingSentimentCircle, error: errorSentimentCircle, sentiments} = sentimentCircle\r\n\r\n    // current type\r\n    const [currentType, setCurrentType] = useState('All')\r\n    //current product\r\n    const [currentProductId, setCurrentProductId] = useState(1)\r\n    //current category\r\n    const [currentCategory, setCurrentCategory] = useState('vivo')\r\n    //select options\r\n    const [selectOptions, setSelectOptions] = useState([])\r\n\r\n    //sentiment circle chart data\r\n    const [sentimentCircleChartData, setSentimentCircleChartData] = useState({})\r\n\r\n\r\n    const [startDate, setStartDate] = useState(new Date('2017-01-01'));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const handleChangeType = (e) => {\r\n        let type = e.value\r\n        setCurrentType(type)\r\n        console.log('Type: ', type)\r\n\r\n        let options = []\r\n        if (type == 'Category') {\r\n            for (let i = 0; i < categoryList.length; i++) {\r\n                options.push({value: categoryList[i].category, label: categoryList[i].category})\r\n            }\r\n        } else if (type == 'Product') {\r\n            for (let i = 0; i < productsList.length; i++) {\r\n                options.push({value: productsList[i]._id, label: productsList[i].name})\r\n            }\r\n        }else if(type=='All'){\r\n            reloadChart()\r\n        }\r\n        console.log('Options: ', options)\r\n        setSelectOptions(options)\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setCurrentCategory(e.value)\r\n         reloadChart()\r\n    }\r\n\r\n    const handleChangeProductId = (e) => {\r\n        setCurrentProductId(e.value)\r\n        reloadChart()\r\n    }\r\n\r\n    const reloadChart = () => {\r\n        let _startDate = startDate.toISOString().split('T')[0]\r\n        let _endDate = endDate.toISOString().split('T')[0]\r\n        if (currentType == 'All') {\r\n            dispatch(sentimentCircleChart(\"\", \"\", _startDate, _endDate))\r\n        } else if (currentType == 'Product') {\r\n            dispatch(sentimentCircleChart('', currentProductId, _startDate, _endDate))\r\n        } else dispatch(sentimentCircleChart(currentCategory, \"\", _startDate, _endDate))\r\n\r\n\r\n    }\r\n    const handleChangeStartDate = (date) => {\r\n        setStartDate(date)\r\n         reloadChart()\r\n    };\r\n    const handleChangeEndDate = (date) => {\r\n        setEndDate(date)\r\n         reloadChart()\r\n    };\r\n\r\n    //reaload chart data\r\n    useEffect(() => {\r\n\r\n        sentiments.map(sentiment => {\r\n            if (sentiment.sentiment == 0) sentiment.sentiment = 'Negative'\r\n            else if (sentiment.sentiment == 1) sentiment.sentiment = 'Neutral'\r\n            else sentiment.sentiment = 'Positive'\r\n        })\r\n        setSentimentCircleChartData({\r\n            series: sentiments.map((data) => data.total),\r\n            options: {\r\n                labels: sentiments.map((data) => data.sentiment),\r\n                chart: {\r\n                    type: 'donut',\r\n                },\r\n                dataLabels: {\r\n                    enabled: true\r\n                },\r\n                colors: ['#ff6384', '#ff9f40', '#4bc0c0'],\r\n            },\r\n        });\r\n    }, [sentimentCircle]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {loadingProductIdName\r\n                ? (<Loader/>)\r\n                : errorProductIdName\r\n                    ? (<Message variant='danger'>{errorProductIdName}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <div className='row'>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>Type</span>\r\n                                    <Select options={[\r\n                                        {value: 'All', label: 'All'},\r\n                                        {value: 'Category', label: 'Category'},\r\n                                        {value: 'Product', label: 'Product'}\r\n                                    ]} onChange={handleChangeType}/>\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n\r\n                                    {currentType == 'Product' ? (\r\n                                            <>\r\n                                                <span>{currentType}</span>\r\n                                                <Select options={selectOptions} onChange={handleChangeProductId}/>\r\n                                            </>\r\n                                        )\r\n                                        : currentType == 'Category' ? (\r\n                                                <>\r\n                                                    <span>{currentType}</span>\r\n                                                    <Select options={selectOptions} onChange={handleChangeCategory}/>\r\n                                                </>\r\n                                            )\r\n                                            : (\r\n                                                <div className='d-none'></div>\r\n                                            )\r\n\r\n                                    }\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>From date</span>\r\n                                    <DatePicker locale=\"us\" selected={startDate} onChange={handleChangeStartDate}/>\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>To date</span>\r\n                                    <DatePicker locale=\"us\" selected={endDate} onChange={handleChangeEndDate}/>\r\n                                </div>\r\n                                {/*<div className='col-sm-6 col-lg-6 mb-4'>*/}\r\n                                {/*    <button className='btn btn-primary' onClick={handleLoadChart}>Load Chart</button>*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                            {sentimentCircleChartData.series == undefined ? (<Loader/>) :\r\n                                sentimentCircleChartData.series.length != 0 ? (\r\n                                    <Chart options={sentimentCircleChartData.options}\r\n                                           series={sentimentCircleChartData.series} type=\"donut\"\r\n                                    />\r\n                                ) : (\r\n                                    <>\r\n                                    </>\r\n\r\n                                )}\r\n                        </div>\r\n                    )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default DoughnutChart;","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Footer.js",["294","295","296","297","298","299","300","301"],"import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"page-footer text-center text-md-left stylish-color-dark pt-0\">\r\n\r\n            <div style={{\"background-color\": \"#4285f4\"}}>\r\n\r\n                <div className=\"container\">\r\n\r\n\r\n                    <div className=\"row py-4 d-flex align-items-center\">\r\n\r\n\r\n                        <div className=\"col-md-6 col-lg-5 text-center text-md-left mb-4 mb-md-0\">\r\n\r\n                            <h6 className=\"mb-0 white-text\">Get connected with us on social networks!</h6>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-6 col-lg-7 text-center text-md-right\">\r\n\r\n\r\n                            <a className=\"fb-ic ml-0 px-2\"><i className=\"fab fa-facebook-f white-text\"> </i></a>\r\n\r\n\r\n                            <a className=\"tw-ic px-2\"><i className=\"fab fa-twitter white-text\"> </i></a>\r\n\r\n\r\n                            <a className=\"gplus-ic px-2\"><i className=\"fab fa-google-plus-g white-text\"> </i></a>\r\n\r\n\r\n                            <a className=\"li-ic px-2\"><i className=\"fab fa-linkedin-in white-text\"> </i></a>\r\n\r\n\r\n                            <a className=\"ins-ic px-2\"><i className=\"fab fa-instagram white-text\"> </i></a>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"container mt-5 text-center text-md-left\">\r\n\r\n                <div class=\"row mt-3\">\r\n\r\n\r\n                    <div class=\"col-md-3 col-lg-4 col-xl-3 mb-4\">\r\n\r\n                        <h6 class=\"text-uppercase font-weight-bold\" style={{color: \"white\"}}><strong>Company name</strong></h6>\r\n\r\n                        <hr class=\"blue mb-4 mt-0 d-inline-block mx-auto\" style={{width: \"60px\"}}/>\r\n\r\n                        <p>Phone shop</p>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n\r\n                        <h6 class=\"text-uppercase font-weight-bold\" style={{color: \"white\"}}><strong>Products</strong></h6>\r\n\r\n                        <hr class=\"blue mb-4 mt-0 d-inline-block mx-auto\" style={{width: \"60px\"}}/>\r\n\r\n                        <p><a href=\"http://localhost:3000/#/search/name/apple\">APPLE</a></p>\r\n                        <p><a href=\"http://localhost:3000/#/search/name/samsung\">SAMSUNG</a></p>\r\n                        <p><a href=\"http://localhost:3000/#/search/name/vivo\">vivo</a></p>\r\n                        <p><a href=\"http://localhost:3000/#/search/name/oppo\">Oppo</a></p>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n\r\n                        <h6 class=\"text-uppercase font-weight-bold\" style={{color: \"white\"}}><strong>Useful links</strong></h6>\r\n\r\n                        <hr class=\"blue mb-4 mt-0 d-inline-block mx-auto\" style={{width: \"60px\"}}/>\r\n\r\n                        <p><a href=\"https://www.fb.com\">Facebook</a></p>\r\n\r\n                        <p><a href=\"https://www.youtube.com\">Youtube</a></p>\r\n\r\n                        <p><a href=\"https://www.instagram.com/\">Instagram</a></p>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-4 col-lg-3 col-xl-3\">\r\n\r\n                        <h6 class=\"text-uppercase font-weight-bold\" style={{color: \"white\"}}><strong>Contact</strong></h6>\r\n\r\n                        <hr class=\"blue mb-4 mt-0 d-inline-block mx-auto\" style={{width: \"60px\"}}/>\r\n\r\n                        <p><i class=\"fas fa-home mr-3\"></i> Nong Lam University</p>\r\n\r\n                        <p><i class=\"fas fa-envelope mr-3\"></i> trinhtien6236@gmail.com</p>\r\n\r\n                        <p><i class=\"fas fa-phone mr-3\"></i> + 84335361398</p>\r\n\r\n                        <p><i class=\"fas fa-print mr-3\"></i> + 84335361398</p>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\BarChart.js",["302","303"],"//import React\r\nimport React, {useState} from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {UserData} from \"../Data\";\r\nimport {Chart as ChartJS} from 'chart.js/auto';\r\n\r\nfunction BarChart(){\r\n\r\n\r\n    const [userData, setUserData] = useState({\r\n        labels: UserData.map((data)=>data.year),\r\n        datasets:[{\r\n            label: 'User Gain',\r\n            data: UserData.map((data)=>data.userGain),\r\n            backgroundColor: ['rgba(87,249,255,0.2)','green'],\r\n            borderColr:'blue',\r\n            borderWidth:2\r\n        }]\r\n    });\r\n    return (\r\n        <Bar data={userData}/>\r\n    )\r\n}\r\n\r\nexport default BarChart;","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SimilarWordCloud.js",["304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"//import React\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {UserData} from \"../Data\";\r\nimport {Chart as ChartJS} from 'chart.js/auto';\r\nimport {\r\n    listAllProducts,\r\n    listProductCategories,\r\n    productsIdName,\r\n    sentimentCircleChart,\r\n    similarWordCloud\r\n} from \"../actions/productActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sentimentBarChartReducer, sentimentLineChartReducer} from \"../reducers/productReducers\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport ReactWordcloud from 'react-wordcloud';\r\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\r\nimport us from 'date-fns/locale/en-US';\r\n\r\nregisterLocale('us', us)\r\n\r\n\r\n\r\nfunction SimilarWordCloud() {\r\n\r\n    // const words = [\r\n    //     {\r\n    //         text: 'told',\r\n    //         value: 15,\r\n    //     },\r\n    //     {\r\n    //         text: 'mistake',\r\n    //         value: 1521,\r\n    //     },\r\n    //     {\r\n    //         text: 'thought',\r\n    //         value: 1566,\r\n    //     },\r\n    //     {\r\n    //         text: 'bad',\r\n    //         value: 17,\r\n    //     },\r\n    //     {\r\n    //         text: 'run',\r\n    //         value: 15,\r\n    //     },\r\n    //     {\r\n    //         text: 'sound',\r\n    //         value: 152,\r\n    //     },\r\n    //     {\r\n    //         text: 'luck',\r\n    //         value: 1566,\r\n    //     },\r\n    //     {\r\n    //         text: 'screen',\r\n    //         value: 17,\r\n    //     },\r\n    // ]\r\n\r\n\r\n    const options = {\r\n        rotations: 2,\r\n        rotationAngles: [-90, 0],\r\n    };\r\n    const size = [500, 500];\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    //send dispatch load init word cloud data\r\n    useEffect(() => {\r\n        dispatch(similarWordCloud());\r\n    }, [dispatch]);\r\n\r\n\r\n    //get sentiment circle chart from store\r\n    const similarWordCloudSelector = useSelector(state => state.similarWordCloud)\r\n    const {loading: loadingWordCloud, error: errorWordCloud, similars: wordCloud} = similarWordCloudSelector\r\n\r\n    // current type\r\n    const [expression, setExpression] = useState('phone')\r\n    //current product\r\n    const [number, setNumber] = useState(10)\r\n\r\n\r\n    const handleChangeExpression = (e) => {\r\n        setExpression(e.target.value)\r\n\r\n    }\r\n    const handleChangeNumber = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n\r\n    const handleClickLoadWordCloud = (e)=>{\r\n        reloadWordCloud()\r\n    }\r\n\r\n    const reloadWordCloud = () => {\r\n          dispatch(similarWordCloud(number, expression))\r\n    }\r\n\r\n    //reaload chart data\r\n    // useEffect(() => {\r\n    //     console.log('word cloud: ',wordCloud)\r\n    //     wordCloud.map(token => {\r\n    //         token.value = token.value*1000\r\n    //     })\r\n    //\r\n    // }, [similarWordCloudSelector]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {loadingWordCloud\r\n                ? (<Loader/>)\r\n                : errorWordCloud\r\n                    ? (<Message variant='danger'>{errorWordCloud}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <div className='row'>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>Expression</span>\r\n                                    <input type=\"text\" value={expression} className=\"form-control\" onChange={handleChangeExpression}/>\r\n\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>Number</span>\r\n                                    <input type=\"number\" value={number} className=\"form-control\" onChange={handleChangeNumber}/>\r\n\r\n                                </div>\r\n\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <button className='btn btn-primary' onClick={handleClickLoadWordCloud}>Load similar</button>\r\n                                </div>\r\n                            </div>\r\n                            <ReactWordcloud\r\n                                        options={options}\r\n                                        words={wordCloud}\r\n                                        // size={size}\r\n                                    />\r\n                            {/*{wordCloud[0] == undefined ? (<Loader/>) :*/}\r\n                            {/*    wordCloud.word.length != 0 ? (*/}\r\n                            {/*        */}\r\n                            {/*    ) : (*/}\r\n                            {/*        <>*/}\r\n                            {/*        </>*/}\r\n\r\n                            {/*    )}*/}\r\n                        </div>\r\n                    )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default SimilarWordCloud;","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\HomeScreen.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Row, Col, Carousel, Image} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport {listProductCategories, listProducts, listRandomProducts, listTopProducts} from '../actions/productActions'\r\nimport {Link} from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\nimport {domain} from \"../env\";\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    // const productList = useSelector(state => state.productList)\r\n\r\n    // const { error, loading, products, page, pages } = productList\r\n\r\n   // const productRandom = useSelector(state => state.productRandom)\r\n   //  const { error, loading, products } = productRandom\r\n\r\n\r\n  const productRandomNews = useSelector(state => state.productRandom)\r\n    const { error, loading, products } = productRandomNews\r\n\r\n\r\n  // const productRandom = useSelector(state => state.productRandom)\r\n  //   const { error1, loading1, products1 } = productRandom\r\n    // const productTopRated = useSelector(state => state.productTopRated)\r\n    // const { error, loading, products } = productTopRated\r\n  // console.log('product_random: ',productList)\r\n    let keyword = history.location.search\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(listProducts(keyword))\r\n    //\r\n    // }, [dispatch, keyword])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(listTopProducts())\r\n    // }, [dispatch])\r\n\r\n      useEffect(() => {\r\n        dispatch(listRandomProducts(18))\r\n    }, [dispatch])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(listRandomProducts(10))\r\n    // }, [dispatch])\r\n    products.map(product => {\r\n       if(!product.image.includes('http')) {\r\n        console.log('here');\r\n        product.image = domain+product.image\r\n      }else{\r\n          product.image = product.image.replace(\"/images/https%3A/\",\"https://\")\r\n      }\r\n    })\r\n    const recommend_products = products.slice(0,6)\r\n    const new_products = products.slice(6,9)\r\n    const top_products = products.slice(9,12)\r\n    const random_products = products.slice(12,15)\r\n    const last_product = products.slice(15,18)\r\n\r\n\r\n    const productCategoryList = useSelector((state) => state.productCategoryList);\r\n  const {\r\n    loading: loadingCategories,\r\n    error: errorCategories,\r\n    categories,\r\n  } = productCategoryList;\r\n\r\n    useEffect(() => {\r\n    dispatch(listProductCategories());\r\n  }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <div style={{marginTop:\"-50px\"}}>\r\n\r\n        {/*   loading ? <Loader />*/}\r\n        {/*: error*/}\r\n        {/*    ? <Message variant='danger'>{error}</Message>*/}\r\n        {/*    :*/}\r\n        {/*        <Carousel pause='hover' className='bg-dark'>*/}\r\n        {/*            {products.map(product => (*/}\r\n        {/*                <Carousel.Item key={product._id}>*/}\r\n        {/*                    <Link to={`/product/${product._id}`}>*/}\r\n        {/*                        <Image src={product.image} alt={product.name} fluid />*/}\r\n        {/*                        <Carousel.Caption className='carousel.caption'>*/}\r\n        {/*                            <h4>{product.name} (${product.price})</h4>*/}\r\n        {/*                        </Carousel.Caption>*/}\r\n        {/*                    </Link>*/}\r\n        {/*                </Carousel.Item>*/}\r\n        {/*            ))}*/}\r\n        {/*        </Carousel>*/}\r\n\r\n\r\n        {/*  <div>*/}\r\n\r\n        {/*    {productsRandom !=undefined}*/}\r\n        {/*    <h1>Latest Products</h1>*/}\r\n        {/*    {loadingRandom ? <Loader />*/}\r\n        {/*        : errorRandom ? <Message variant='danger'>{errorRandom}</Message>*/}\r\n        {/*            :*/}\r\n        {/*            <div>*/}\r\n        {/*                <Row>*/}\r\n        {/*                    {productsRandom.map(product => (*/}\r\n        {/*                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>*/}\r\n        {/*                            <Product product={product} />*/}\r\n        {/*                        </Col>*/}\r\n        {/*                    ))}*/}\r\n        {/*                </Row>*/}\r\n\r\n        {/*            </div>*/}\r\n        {/*    }*/}\r\n        {/*</div>*/}\r\n\r\n\r\n\r\n        {/*<div>*/}\r\n        {/*    {!keyword && <ProductCarousel />}*/}\r\n\r\n        {/*    <h1>Latest Products</h1>*/}\r\n        {/*    {loading ? <Loader />*/}\r\n        {/*        : error ? <Message variant='danger'>{error}</Message>*/}\r\n        {/*            :*/}\r\n        {/*            <div>*/}\r\n        {/*                <Row>*/}\r\n        {/*                    {recommend_products.map(product => (*/}\r\n\r\n        {/*                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>*/}\r\n        {/*                            <Product product={product} />*/}\r\n        {/*                        </Col>*/}\r\n        {/*                    ))}*/}\r\n        {/*                </Row>*/}\r\n\r\n        {/*                /!*<Paginate page={page} pages={pages} keyword={keyword} />*!/*/}\r\n        {/*            </div>*/}\r\n        {/*    }*/}\r\n        {/*</div>*/}\r\n\r\n\r\n\r\n          <div class=\"container\">\r\n\r\n\r\n    <div class=\"row pt-4\">\r\n\r\n\r\n      <div class=\"col-lg-12\">\r\n\r\n\r\n        <section class=\"section pt-4\">\r\n\r\n\r\n          <div class=\"row\">\r\n\r\n\r\n            <div class=\"col-lg-8 col-md-12 mb-3 pb-lg-2\">\r\n\r\n\r\n              <div class=\"view zoom  z-depth-1\">\r\n\r\n                <img style={{height:'450px'}} src=\"https://assets.mspimages.in/wp-content/uploads/2019/07/Vivo-S1-Teaser-Image.jpg\" class=\"img-fluid\" alt=\"sample image\"/>\r\n\r\n                {/*<div class=\"mask rgba-white-light\">*/}\r\n\r\n                {/*  <div class=\"dark-grey-text d-flex align-items-center pt-3 pl-4\">*/}\r\n\r\n                {/*    <div>*/}\r\n\r\n                {/*      <a><span class=\"badge badge-danger\">bestseller</span></a>*/}\r\n\r\n                {/*      <h2 class=\"card-title font-weight-bold pt-2\"><strong>This is news title</strong></h2>*/}\r\n\r\n                {/*      <p class=\"\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. </p>*/}\r\n\r\n                {/*      <a class=\"btn btn-danger btn-sm btn-rounded clearfix d-none d-md-inline-block\">Read more</a>*/}\r\n\r\n                {/*    </div>*/}\r\n\r\n                {/*  </div>*/}\r\n\r\n                {/*</div>*/}\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"col-lg-4 col-md-12 mb-4\">\r\n\r\n\r\n              <section class=\"section\">\r\n\r\n                <ul class=\"list-group z-depth-1\">\r\n\r\n\r\n\r\n\r\n            {loadingCategories ? (\r\n              <Loader/>\r\n            ) : errorCategories ? (\r\n              <Message variant=\"danger\">{errorCategories}</Message>\r\n            ) : (\r\n              <div>\r\n\r\n                {categories.map((c) => (\r\n                     <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\r\n                        <Link to={`search/category/${c.category}`} className=\"dark-grey-text font-small\"><i className=\"fas fa-laptop dark-grey-text mr-2\"\r\n                                                                    aria-hidden=\"true\"></i> {c.category} </Link>\r\n                       <span className=\"badge badge-danger badge-pill\">{c.total}</span>\r\n\r\n                      </li>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n                </ul>\r\n\r\n              </section>\r\n\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </section>\r\n\r\n        <section>\r\n\r\n\r\n          <div class=\"row\">\r\n\r\n\r\n            <div class=\"col-12\">\r\n\r\n\r\n              <div class=\"row\">\r\n\r\n {recommend_products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} className={'mb-4'}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n              </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </section>\r\n\r\n        <section>\r\n\r\n\r\n          <div class=\"row\">\r\n\r\n\r\n            <div class=\"col-12\">\r\n\r\n\r\n              <div class=\"view  z-depth-1\">\r\n\r\n                <img src=\"https://mdbootstrap.com/img/Photos/Others/ecommerce6.jpg\" class=\"img-fluid\"\r\n                  alt=\"sample image\"/>\r\n\r\n                <div class=\"mask rgba-stylish-slight\">\r\n\r\n                  <div class=\"dark-grey-text text-right pt-lg-5 pt-md-1 mr-5 pr-md-4 pr-0\">\r\n\r\n                    <div>\r\n\r\n                      <a>\r\n\r\n                        <span class=\"badge badge-primary\">SALE</span>\r\n\r\n                      </a>\r\n\r\n                      <h2 class=\"card-title font-weight-bold pt-md-3 pt-1\">\r\n\r\n                        <strong style={{fontSize:\"15px\"}}>Sale 20% off on every smartphone!\r\n\r\n                        </strong>\r\n\r\n                      </h2>\r\n\r\n                      {/*<p class=\"pb-lg-3 pb-md-1 clearfix d-none d-md-block\">Lorem ipsum dolor sit amet, consectetur*/}\r\n                      {/*  adipisicing elit. </p>*/}\r\n\r\n                      <a class=\"btn mr-0 btn-primary btn-rounded clearfix d-none d-md-inline-block\">Read more</a>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          <div class=\"row mt-4 pt-1\">\r\n\r\n\r\n            <div class=\"col-lg-8 col-md-12 mb-3 mb-md-4 pb-lg-2\">\r\n\r\n\r\n              <div class=\"view zoom z-depth-1\">\r\n\r\n                <img src=\"https://mdbootstrap.com/img/Photos/Others/product1.jpg\" class=\"img-fluid\" alt=\"sample image\"/>\r\n\r\n                <div class=\"mask rgba-white-light\">\r\n\r\n                  <div class=\"dark-grey-text d-flex align-items-center pt-4 ml-lg-3 pl-lg-3 pl-md-5\">\r\n\r\n                    <div>\r\n\r\n                      <a><span class=\"badge badge-danger\">bestseller</span></a>\r\n\r\n                      <h2 class=\"card-title font-weight-bold pt-2\"><strong>Get new phones</strong></h2>\r\n\r\n                      <p class=\"hidden show-ud-up\">Get new phones for National Day </p>\r\n\r\n                      <a class=\"btn btn-danger btn-sm btn-rounded clearfix d-none d-md-inline-block\"> Read more</a>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"col-lg-4 col-md-12 mb-4\">\r\n\r\n\r\n              <div class=\"view zoom z-depth-1 photo\">\r\n\r\n                <img src=\"https://mdbootstrap.com/img/Photos/Others/product3.jpg\" class=\"img-fluid\" alt=\"sample image\"/>\r\n\r\n                <div class=\"mask rgba-stylish-strong\">\r\n\r\n                  <div class=\"white-text center-element text-center w-75\">\r\n\r\n                    <div class=\"\">\r\n\r\n                      <a><span class=\"badge badge-info\">NEW</span></a>\r\n\r\n                      <h2 class=\"card-title font-weight-bold pt-2\"><strong>Best phones for you</strong></h2>\r\n\r\n                      {/*<p class=\"\">Lorem ipsum dolor sit amet, consectetur. </p>*/}\r\n\r\n                      <a class=\"btn btn-info btn-sm btn-rounded\">Read more</a>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </section>\r\n\r\n        <section class=\"mb-5\">\r\n\r\n          <div class=\"row\">\r\n\r\n\r\n            <div class=\"col-lg-4 col-md-12 col-12 pt-4\">\r\n\r\n              <hr/>\r\n\r\n              <h5 class=\"text-center font-weight-bold dark-grey-text\"><strong>New Products</strong></h5>\r\n\r\n              <hr/>\r\n\r\n {new_products.map(product => (\r\n       <Link to={`/product/${product._id}`}>\r\n       <div className=\"row mt-5 py-2 mb-4 hoverable align-items-center\">\r\n\r\n       <div className=\"col-6\">\r\n\r\n         <img src={product.image} style={{\"width\":\"100px\",\"height\":\"200px\"}}\r\n                 className=\"img-fluid\"/>\r\n\r\n\r\n       </div>\r\n\r\n       <div className=\"col-6\">\r\n\r\n\r\n        <a className=\"pt-5\"><strong>{product.name}</strong></a>\r\n\r\n\r\n        <Rating value={product.rating} text={`${product.numReviews}`} color={'#f8e825'} />\r\n\r\n\r\n         <h6 className=\"h6-responsive font-weight-bold dark-grey-text\"><strong>${product.price}</strong></h6>\r\n\r\n       </div>\r\n\r\n     </div>\r\n         </Link>\r\n                            ))}\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"col-lg-4 col-md-12 pt-4\">\r\n\r\n              <hr/>\r\n\r\n              <h5 class=\"text-center font-weight-bold dark-grey-text\"><strong>Top Sellers</strong></h5>\r\n\r\n              <hr/>\r\n\r\n\r\n             {top_products.map(product => (\r\n       <Link to={`/product/${product._id}`}>\r\n       <div className=\"row mt-5 py-2 mb-4 hoverable align-items-center\">\r\n\r\n       <div className=\"col-6\">\r\n\r\n         <img src={product.image} style={{\"width\":\"100px\",\"height\":\"200px\"}}\r\n                 className=\"img-fluid\"/>\r\n\r\n\r\n       </div>\r\n\r\n       <div className=\"col-6\">\r\n\r\n\r\n        <a className=\"pt-5\"><strong>{product.name}</strong></a>\r\n\r\n\r\n        <Rating value={product.rating} text={`${product.numReviews}`} color={'#f8e825'} />\r\n\r\n\r\n         <h6 className=\"h6-responsive font-weight-bold dark-grey-text\"><strong>${product.price}</strong></h6>\r\n\r\n       </div>\r\n\r\n     </div>\r\n         </Link>\r\n                            ))}\r\n              \r\n\r\n            </div>\r\n            \r\n\r\n            \r\n            <div class=\"col-lg-4 col-md-12 pt-4\">\r\n\r\n              <hr/>\r\n\r\n              <h5 class=\"text-center font-weight-bold dark-grey-text\"><strong>Random products</strong></h5>\r\n\r\n              <hr/>\r\n\r\n              \r\n            {random_products.map(product => (\r\n       <Link to={`/product/${product._id}`}>\r\n       <div className=\"row mt-5 py-2 mb-4 hoverable align-items-center\">\r\n\r\n       <div className=\"col-6\">\r\n\r\n         <img src={product.image} style={{\"width\":\"100px\",\"height\":\"200px\"}}\r\n                 className=\"img-fluid\"/>\r\n\r\n\r\n       </div>\r\n\r\n       <div className=\"col-6\">\r\n\r\n\r\n        <a className=\"pt-5\"><strong>{product.name}</strong></a>\r\n\r\n\r\n        <Rating value={product.rating} text={`${product.numReviews}`} color={'#f8e825'} />\r\n\r\n\r\n         <h6 className=\"h6-responsive font-weight-bold dark-grey-text\"><strong>${product.price}</strong></h6>\r\n\r\n       </div>\r\n\r\n     </div>\r\n         </Link>\r\n                            ))}\r\n              \r\n\r\n            </div>\r\n            \r\n\r\n          </div>\r\n\r\n        </section>\r\n        \r\n\r\n        \r\n        <section>\r\n\r\n          <h4 class=\"font-weight-bold mt-4 dark-grey-text\"><strong>LAST ITEMS</strong></h4>\r\n\r\n          <hr class=\"mb-5\"/>\r\n\r\n          \r\n          <div class=\"row\">\r\n {last_product.map(product => (\r\n                                <Col key={product._id} md={6} lg={4} sm={12} className={'mb-4'}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n            \r\n\r\n            \r\n\r\n          </div>\r\n          \r\n\r\n          \r\n          {/*<div class=\"row justify-content-center mb-4\">*/}\r\n\r\n          {/*  */}\r\n          {/*  <nav class=\"mb-4\">*/}\r\n\r\n          {/*    <ul class=\"pagination pagination-circle pg-blue mb-0\">*/}\r\n\r\n          {/*      */}\r\n          {/*      <li class=\"page-item disabled clearfix d-none d-md-block\"><a*/}\r\n          {/*          class=\"page-link waves-effect waves-effect\">First</a></li>*/}\r\n\r\n          {/*      */}\r\n          {/*      <li class=\"page-item disabled\">*/}\r\n\r\n          {/*        <a class=\"page-link waves-effect waves-effect\" aria-label=\"Previous\">*/}\r\n\r\n          {/*          <span aria-hidden=\"true\">«</span>*/}\r\n\r\n          {/*          <span class=\"sr-only\">Previous</span>*/}\r\n\r\n          {/*        </a>*/}\r\n\r\n          {/*      </li>*/}\r\n\r\n          {/*      */}\r\n          {/*      <li class=\"page-item active\"><a class=\"page-link waves-effect waves-effect\">1</a></li>*/}\r\n\r\n          {/*      <li class=\"page-item\"><a class=\"page-link waves-effect waves-effect\">2</a></li>*/}\r\n\r\n          {/*      <li class=\"page-item\"><a class=\"page-link waves-effect waves-effect\">3</a></li>*/}\r\n\r\n          {/*      <li class=\"page-item\"><a class=\"page-link waves-effect waves-effect\">4</a></li>*/}\r\n\r\n          {/*      <li class=\"page-item\"><a class=\"page-link waves-effect waves-effect\">5</a></li>*/}\r\n\r\n          {/*      */}\r\n          {/*      <li class=\"page-item\">*/}\r\n\r\n          {/*        <a class=\"page-link waves-effect waves-effect\" aria-label=\"Next\">*/}\r\n\r\n          {/*          <span aria-hidden=\"true\">»</span>*/}\r\n\r\n          {/*          <span class=\"sr-only\">Next</span>*/}\r\n\r\n          {/*        </a>*/}\r\n\r\n          {/*      </li>*/}\r\n\r\n          {/*      */}\r\n          {/*      <li class=\"page-item clearfix d-none d-md-block\"><a class=\"page-link waves-effect waves-effect\">Last</a>*/}\r\n          {/*      </li>*/}\r\n\r\n          {/*    </ul>*/}\r\n\r\n          {/*  </nav>*/}\r\n          {/*  */}\r\n\r\n          {/*</div>*/}\r\n          \r\n\r\n        </section>\r\n        \r\n\r\n      </div>\r\n      \r\n\r\n    </div>\r\n    \r\n\r\n  </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\CartScreen.js",["346"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card, Container} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport {domain} from \"../env\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    if(cartItems !==undefined && cartItems.length !== 0) {\r\n        cartItems.map(item => {\r\n                if(!item.image.includes('http')) {\r\n                    console.log('here');\r\n                    item.image = domain+item.image\r\n            }else{\r\n                item.image = item.image.replace(\"/images/https%3A/\",\"https://\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <Row>\r\n            <Col md={8}>\r\n                {/*<h1>Shopping Cart</h1>*/}\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image style={{with:\"70px\" , height:'100px'}} src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} style={{marginTop:'20px'}}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3} style={{marginTop:'10px'}}>\r\n                                            <Form.Control\r\n                                                as=\"select\" style={{paddingTop:'10px'}}\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default CartScreen","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProductScreen.js",["347","348","349","350","351","352","353","354","355","356","357"],"import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport {Row, Col, Image, ListGroup, Button, Card, Form, Container} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {listProductDetails, createProductReview, userBuyProduct} from '../actions/productActions'\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\r\nimport {domain} from \"../env\";\r\n\r\nfunction ProductScreen({match, history}) {\r\n      const {\r\n        id = 1\r\n    } = useParams();\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userBuyProductSelection = useSelector(state => state.userBuyProduct)\r\n    const {loading: loadingUserBuyProduct, error: errorUserBuyProduct, products} = userBuyProductSelection\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    //Load user buy product\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            dispatch(userBuyProduct(userInfo._id, id))\r\n        }\r\n    }, [dispatch, userInfo, product])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n    if (product.image !== undefined) {\r\n        if (!product.image.includes('http')) {\r\n            console.log('here');\r\n            product.image = domain + product.image\r\n        } else {\r\n            product.image = product.image.replace(\"/images/https%3A/\", \"https://\")\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <div style={{margin: \"0px\"}}>\r\n\r\n                {loading ?\r\n                    <Loader/>\r\n                    : error\r\n                        ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                            <div>\r\n                                <Row>\r\n                                    <Col md={1}></Col>\r\n                                    <Col md={5}>\r\n                                        <Image src={product.image} alt={product.name} fluid/>\r\n                                    </Col>\r\n\r\n\r\n                                    {/*<Col md={3}>*/}\r\n                                    {/*    <ListGroup variant=\"flush\">*/}\r\n                                    {/*        <ListGroup.Item>*/}\r\n                                    {/*            <h3>{product.name}</h3>*/}\r\n                                    {/*        </ListGroup.Item>*/}\r\n\r\n                                    {/*        <ListGroup.Item>*/}\r\n                                    {/*            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />*/}\r\n                                    {/*        </ListGroup.Item>*/}\r\n\r\n                                    {/*        <ListGroup.Item>*/}\r\n                                    {/*            Price: ${product.price}*/}\r\n                                    {/*        </ListGroup.Item>*/}\r\n\r\n                                    {/*        <ListGroup.Item>*/}\r\n                                    {/*            Description: {product.description}*/}\r\n                                    {/*        </ListGroup.Item>*/}\r\n                                    {/*    </ListGroup>*/}\r\n                                    {/*</Col>*/}\r\n                                    {/*<Col md={3}>*/}\r\n                                    {/*    <Card>*/}\r\n                                    {/*        <ListGroup variant='flush'>*/}\r\n                                    {/*            <ListGroup.Item>*/}\r\n                                    {/*                <Row>*/}\r\n                                    {/*                    <Col>Price:</Col>*/}\r\n                                    {/*                    <Col>*/}\r\n                                    {/*                        <strong>${product.price}</strong>*/}\r\n                                    {/*                    </Col>*/}\r\n                                    {/*                </Row>*/}\r\n                                    {/*            </ListGroup.Item>*/}\r\n                                    {/*            <ListGroup.Item>*/}\r\n                                    {/*                <Row>*/}\r\n                                    {/*                    <Col>Status:</Col>*/}\r\n                                    {/*                    <Col>*/}\r\n                                    {/*                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}*/}\r\n                                    {/*                    </Col>*/}\r\n                                    {/*                </Row>*/}\r\n                                    {/*            </ListGroup.Item>*/}\r\n\r\n                                    {/*            {product.countInStock > 0 && (*/}\r\n                                    {/*                <ListGroup.Item>*/}\r\n                                    {/*                    <Row>*/}\r\n                                    {/*                        <Col>Qty</Col>*/}\r\n                                    {/*                        <Col xs='auto' className='my-1'>*/}\r\n                                    {/*                            <Form.Control*/}\r\n                                    {/*                                as=\"select\"*/}\r\n                                    {/*                                value={qty}*/}\r\n                                    {/*                                onChange={(e) => setQty(e.target.value)}*/}\r\n                                    {/*                            >*/}\r\n                                    {/*                                {*/}\r\n\r\n                                    {/*                                    [...Array(product.countInStock).keys()].map((x) => (*/}\r\n                                    {/*                                        <option key={x + 1} value={x + 1}>*/}\r\n                                    {/*                                            {x + 1}*/}\r\n                                    {/*                                        </option>*/}\r\n                                    {/*                                    ))*/}\r\n                                    {/*                                }*/}\r\n\r\n                                    {/*                            </Form.Control>*/}\r\n                                    {/*                        </Col>*/}\r\n                                    {/*                    </Row>*/}\r\n                                    {/*                </ListGroup.Item>*/}\r\n                                    {/*            )}*/}\r\n\r\n\r\n                                    {/*            <ListGroup.Item>*/}\r\n                                    {/*                <Button*/}\r\n                                    {/*                    onClick={addToCartHandler}*/}\r\n                                    {/*                    className='btn-block'*/}\r\n                                    {/*                    disabled={product.countInStock == 0}*/}\r\n                                    {/*                    type='button'>*/}\r\n                                    {/*                    Add to Cart*/}\r\n                                    {/*                </Button>*/}\r\n                                    {/*            </ListGroup.Item>*/}\r\n                                    {/*        </ListGroup>*/}\r\n                                    {/*    </Card>*/}\r\n                                    {/*</Col>*/}\r\n                                    <Col md={6}>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <h4>{product.name}</h4>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Rating value={product.rating} text={`${product.numReviews} reviews`}\r\n                                                        color={'#f8e825'}/>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n\r\n                                                <Row>\r\n                                                    <Col md={3}>\r\n                                                        Price:\r\n                                                    </Col>\r\n                                                    <Col md={3}>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                    <Col md={3}>Status:</Col>\r\n                                                    <Col md={3}>\r\n                                                        <strong>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <p className=\"mb-0\">Desc: {product.description}</p>\r\n                                            </ListGroup.Item>\r\n\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Quantity</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    //[0,1,2]\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button variant=\"outline-primary\" onClick={addToCartHandler}\r\n                                                        className='btn-block' disabled={product.countInStock == 0}\r\n                                                        type='button'>Add to Cart</Button>\r\n                                            </ListGroup.Item>\r\n\r\n\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <h4>Reviews</h4>\r\n                                        {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                        <ListGroup variant='flush'>\r\n                                            {product.reviews.map((review) => (\r\n                                                <ListGroup.Item key={review._id}>\r\n                                                    <strong>{review.name}</strong>\r\n                                                    <Rating value={review.rating} color='#f8e825'/>\r\n                                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                    <p>{review.comment}</p>\r\n                                                    {/*<p className={bg-success text-white}></p>*/}\r\n                                                    {review.comment.length !=0 ?(\r\n                                                        <>\r\n                                                    <p style={{lineHeight: \"0px\"}}\r\n                                                       className={review.sentiment == 2 ? \"btn btn-outline-success\" : 'd-none'}>\r\n                                                        <i className=\"fa fa-thumbs-up\"></i> Positive ({review.positive}%)</p>\r\n                                                    <p style={{lineHeight: \"0px\"}}\r\n                                                       className={review.sentiment == 1 ? \"btn btn-outline-warning\" : 'd-none'}>\r\n                                                        <i className=\"fas fa-hand-paper\"></i> Neutral ({review.neutral}%)</p>\r\n                                                    <p style={{lineHeight: \"0px\"}}\r\n                                                       className={review.sentiment == 0 ? \"btn btn-outline-danger\" : 'd-none'}>\r\n                                                        <i\r\n                                                            className=\"fa fa-thumbs-down\"></i> Negative ({review.negative}%)</p>\r\n                                                    </>\r\n                                                        ):(<></>)}\r\n\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n\r\n                                            <ListGroup.Item>\r\n                                                {loadingProductReview && <Loader/>}\r\n                                                {loadingUserBuyProduct && <Loader/>}\r\n\r\n                                                {successProductReview &&\r\n                                                    <Message variant='success'>Review Submitted</Message>}\r\n                                                {errorProductReview &&\r\n                                                    <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                                {userInfo && products != undefined && products.length != 0 ? (\r\n                                                    <>\r\n                                                        <h4>Write a review</h4>\r\n                                                        <Form onSubmit={submitHandler}>\r\n                                                            <Form.Group controlId='rating'>\r\n                                                                <Form.Label>Rating</Form.Label>\r\n                                                                <Form.Control\r\n                                                                    as='select'\r\n                                                                    value={rating}\r\n                                                                    onChange={(e) => setRating(e.target.value)}\r\n                                                                >\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Poor</option>\r\n                                                                    <option value='2'>2 - Fair</option>\r\n                                                                    <option value='3'>3 - Good</option>\r\n                                                                    <option value='4'>4 - Very Good</option>\r\n                                                                    <option value='5'>5 - Excellent</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n\r\n                                                            <Form.Group controlId='comment'>\r\n                                                                <Form.Label>Review</Form.Label>\r\n                                                                <Form.Control\r\n                                                                    as='textarea'\r\n                                                                    row='5'\r\n                                                                    value={comment}\r\n                                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                                ></Form.Control>\r\n                                                            </Form.Group>\r\n\r\n                                                            <Button\r\n                                                                disabled={loadingProductReview}\r\n                                                                type='submit'\r\n                                                                variant='primary'\r\n                                                            >\r\n                                                                Submit\r\n                                                            </Button>\r\n\r\n                                                        </Form>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    // <Message variant='info'>Please <Link to='/login'>login</Link> and buy product to write a review</Message>\r\n                                                    <></>\r\n                                                )}\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        )\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\RegisterScreen.js",["358"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button, Row, Col, Container} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProfileScreen.js",["359","360"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button, Row, Col, Table, Container} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container>\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ShippingScreen.js",["361"],"import React, { useState, useEffect } from 'react'\r\nimport {Form, Button, Container} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\PlaceOrderScreen.js",["362","363","364"],"import React, { useState, useEffect } from 'react'\r\nimport {Button, Row, Col, ListGroup, Image, Card, Container} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport {domain} from \"../env\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n      if (order !== undefined && order.orderItems.length !== 0) {\r\n            order.orderItems.map(item => {\r\n                if (!item.image.includes('http')) {\r\n                    item.image = domain + item.image\r\n                } else {\r\n                    item.image = item.image.replace(\"/images/https%3A/\", \"https://\")\r\n                }\r\n            })\r\n        }\r\n    return (\r\n        <Container>\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\OrderScreen.js",["365","366","367","368"],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\PaymentScreen.js",["369"],"import React, { useState, useEffect } from 'react'\r\nimport {Form, Button, Col, Container} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [cashPayment, setCashPayment] = useState(true)\r\n    const [paypalPayment, setPaypalPayment] = useState(false)\r\n\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        let paymentMethod = cashPayment ? 'Cash' : 'PayPal'\r\n        console.log(paymentMethod)\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Cash'\r\n                            id='Cash'\r\n                            name='paymentMethod'\r\n                            value='Cash'\r\n                            checked={cashPayment}\r\n                            onChange={(e) =>{\r\n                                 console.log('Cash payment: ', e.target.checked)\r\n                                setPaypalPayment(!e.target.checked)\r\n                                setCashPayment(e.target.checked)\r\n                            }}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked = {paypalPayment}\r\n                          onChange={(e) => {\r\n                              console.log('Paypal payment: ', e.target.checked)\r\n                              setCashPayment(!e.target.checked)\r\n                              setPaypalPayment(e.target.checked)\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n             </Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\UserListScreen.js",["370","371"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table, Button, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    console.log(\"Dang vao UserListScreen\")\r\n    console.log('userInfo', userInfo)\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <div>\r\n        //     <h1>Users</h1>\r\n        //     {loading\r\n        //         ? (<Loader />)\r\n        //         : error\r\n        //             ? (<Message variant='danger'>{error}</Message>)\r\n        //             : (\r\n        //                 <Table striped bordered hover responsive className='table-sm'>\r\n        //                     <thead>\r\n        //                         <tr>\r\n        //                             <th>ID</th>\r\n        //                             <th>NAME</th>\r\n        //                             <th>EMAIL</th>\r\n        //                             <th>ADMIN</th>\r\n        //                             <th></th>\r\n        //                         </tr>\r\n        //                     </thead>\r\n        //\r\n        //                     <tbody>\r\n        //                         {users.map(user => (\r\n        //                             <tr key={user._id}>\r\n        //                                 <td>{user._id}</td>\r\n        //                                 <td>{user.name}</td>\r\n        //                                 <td>{user.email}</td>\r\n        //                                 <td>{user.isAdmin ? (\r\n        //                                     <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n        //                                 ) : (\r\n        //                                         <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n        //                                     )}</td>\r\n        //\r\n        //                                 <td>\r\n        //                                     <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n        //                                         <Button variant='light' className='btn-sm'>\r\n        //                                             <i className='fas fa-edit'></i>\r\n        //                                         </Button>\r\n        //                                     </LinkContainer>\r\n        //\r\n        //                                     <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n        //                                         <i className='fas fa-trash'></i>\r\n        //                                     </Button>\r\n        //                                 </td>\r\n        //                             </tr>\r\n        //                         ))}\r\n        //                     </tbody>\r\n        //                 </Table>\r\n        //             )}\r\n        // </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"container-for-admin\">\r\n\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 col-md-3 \">\r\n\r\n\r\n                        <div className=\"list-group list-group-flush card mb-4 wow fadeIn \">\r\n                            <h4 className=\"list-group-item list-group-item-action waves-effect\" style={{background:'rgba(0,0,0,.05)', textAlign:'center'}}>\r\n                                <span >Admin</span>\r\n                            </h4>\r\n                            <Link to={`/admin/dashboard`} className=\"list-group-item list-group-item-action waves-effect\">\r\n                                <i className=\"fa fa-chart-line mr-3\"></i>Dashboard\r\n                            </Link>\r\n                            <Link to={`/admin/productlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('productlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Product</Link>\r\n                            <Link to={`/admin/userlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('userlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-user mr-3\"></i>User</Link>\r\n                            <Link to={`/admin/orderlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('orderlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-shopping-cart mr-3\"></i>Order</Link>\r\n                             <Link to={`/admin/reviewlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('reviewlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Review</Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <div className=\"card mb-4 wow fadeIn\">\r\n                            <div className=\"card-body d-sm-flex justify-content-between\" style={{padding:'5px'}} >\r\n\r\n                                <h3 className=\"pt-3 pl-3\">\r\n                                    User List\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*Product list*/}\r\n\r\n                       <div>\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n\r\n                        {/*    Product list*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\UserEditScreen.js",["372"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProductListScreen.js",["373","374","375","376","377"],"import React, {useState, useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport {listProducts, deleteProduct, createProduct, listAllProducts} from '../actions/productActions'\r\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\r\nimport {Link, useLocation, useParams} from \"react-router-dom\";\r\n\r\nfunction ProductListScreen({history, match}) {\r\n    const {\r\n        pageNum = 1\r\n    } = useParams();\r\n    const dispatch = useDispatch()\r\n\r\n    console.log(pageNum)\r\n    useEffect(() => {\r\n        console.log(\"Product List Screen: \", pageNum)\r\n        dispatch(\r\n            listAllProducts(pageNum)\r\n        );\r\n    }, [dispatch, pageNum]);\r\n    // const productList = useSelector(state => state.productList)\r\n    // const { loading, error, products, pages, page } = productList\r\n\r\n    // console.log('ProductListScreen: ', productAllList)\r\n\r\n    const productAllList = useSelector(state => state.productAllList)\r\n    const {loading, error, products, pages, page} = productAllList\r\n\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listAllProducts())\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n    const range = (start, end, total_pages) => {\r\n\r\n        let output = [];\r\n        if (typeof end === 'undefined') {\r\n            end = start;\r\n            start = 0;\r\n        }\r\n        console.log(\"start: \", start, end, total_pages)\r\n        for (let i = start; i <= end; i += 1) {\r\n            if (i < 1) continue;\r\n            if (i > total_pages) break;\r\n            console.log('i: ', i)\r\n            output.push(i);\r\n        }\r\n        console.log(\"output: \", output)\r\n        return output;\r\n    };\r\n    return (\r\n        // <div>\r\n        //     <Row className='align-items-center'>\r\n        //         <Col>\r\n        //             <h1>Products</h1>\r\n        //         </Col>\r\n        //\r\n        //         <Col className='text-right'>\r\n        //             <Button className='my-3' onClick={createProductHandler}>\r\n        //                 <i className='fas fa-plus'></i> Create Product\r\n        //             </Button>\r\n        //         </Col>\r\n        //     </Row>\r\n        //\r\n        //     {loadingDelete && <Loader />}\r\n        //     {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        //\r\n        //\r\n        //     {loadingCreate && <Loader />}\r\n        //     {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        //\r\n        //     {loading\r\n        //         ? (<Loader />)\r\n        //         : error\r\n        //             ? (<Message variant='danger'>{error}</Message>)\r\n        //             : (\r\n        //                 <div>\r\n        //                     <Table striped bordered hover responsive className='table-sm'>\r\n        //                         <thead>\r\n        //                             <tr>\r\n        //                                 <th>ID</th>\r\n        //                                 <th>NAME</th>\r\n        //                                 <th>PRICE</th>\r\n        //                                 <th>CATEGORY</th>\r\n        //                                 <th>BRAND</th>\r\n        //                                 <th></th>\r\n        //                             </tr>\r\n        //                         </thead>\r\n        //\r\n        //                         <tbody>\r\n        //                             {products.map(product => (\r\n        //                                 <tr key={product._id}>\r\n        //                                     <td>{product._id}</td>\r\n        //                                     <td>{product.name}</td>\r\n        //                                     <td>${product.price}</td>\r\n        //                                     <td>{product.category}</td>\r\n        //                                     <td>{product.brand}</td>\r\n        //\r\n        //                                     <td>\r\n        //                                         <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n        //                                             <Button variant='light' className='btn-sm'>\r\n        //                                                 <i className='fas fa-edit'></i>\r\n        //                                             </Button>\r\n        //                                         </LinkContainer>\r\n        //\r\n        //                                         <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n        //                                             <i className='fas fa-trash'></i>\r\n        //                                         </Button>\r\n        //                                     </td>\r\n        //                                 </tr>\r\n        //                             ))}\r\n        //                         </tbody>\r\n        //                     </Table>\r\n        //                      <div className=\"row justify-content-center mb-4\">\r\n        //\r\n        //\r\n        //       <nav className=\"mb-4\">\r\n        //\r\n        //         <ul className=\"pagination pagination-circle pg-blue mb-0\">\r\n        //\r\n        //           <li className=\"page-item\">\r\n        //\r\n        //             <Link\r\n        //             className=\"page-link waves-effect waves-effect\"\r\n        //\r\n        //             to={`/admin/productlist/page/${page==1?1:page-1}`}\r\n        //           >\r\n        //\r\n        //             <span aria-hidden=\"true\">«</span>\r\n        //               <span className=\"sr-only\">Previous</span>\r\n        //\r\n        //           </Link>\r\n        //\r\n        //           </li>\r\n        //\r\n        //             {\r\n        //                 range(page-3,page+3,pages).map((x) => (\r\n        //                   <li className={`page-item ${x === page ? 'active' : ''}`} >\r\n        //               <Link\r\n        //                 className=\"page-link waves-effect waves-effect\"\r\n        //                 key={x}\r\n        //                  to={`/admin/productlist/page/${x}`}\r\n        //               >\r\n        //                 {x}\r\n        //           </Link>\r\n        //                 </li>\r\n        //         ))}\r\n        //\r\n        //\r\n        //           <li className=\"page-item\">\r\n        //\r\n        //\r\n        //              <Link\r\n        //             className=\"page-link waves-effect waves-effect\"\r\n        //\r\n        //              to={`/admin/productlist/page/${page>=pages?pages:page+1}`}\r\n        //           >\r\n        //\r\n        //             <span aria-hidden=\"true\">»</span>\r\n        //               <span className=\"sr-only\">Next</span>\r\n        //\r\n        //           </Link>\r\n        //\r\n        //           </li>\r\n        //\r\n        //\r\n        //\r\n        //\r\n        //         </ul>\r\n        //\r\n        //       </nav>\r\n        //\r\n        //\r\n        //     </div>\r\n        //                 </div>\r\n        //             )}\r\n        // </div>\r\n\r\n\r\n        //Break\r\n\r\n\r\n        <div className=\"container-for-admin\">\r\n\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 col-md-3 \">\r\n\r\n\r\n                        <div className=\"list-group list-group-flush card mb-4 wow fadeIn \">\r\n                            <h4 className=\"list-group-item list-group-item-action waves-effect\" style={{background:'rgba(0,0,0,.05)', textAlign:'center'}}>\r\n                                <span >Admin</span>\r\n                            </h4>\r\n                            <Link to={`/admin/dashboard`} className=\"list-group-item list-group-item-action waves-effect\">\r\n                                <i className=\"fa fa-chart-line mr-3\"></i>Dashboard\r\n                            </Link>\r\n                            <Link to={`/admin/productlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('productlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Product</Link>\r\n                            <Link to={`/admin/userlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('userlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-user mr-3\"></i>User</Link>\r\n                            <Link to={`/admin/orderlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('orderlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-shopping-cart mr-3\"></i>Order</Link>\r\n                             <Link to={`/admin/reviewlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('reviewlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Review</Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <div className=\"card mb-4 wow fadeIn\">\r\n                            <div className=\"card-body d-sm-flex justify-content-between\" style={{padding:'5px'}} >\r\n\r\n                                <h3 className=\"pt-3 pl-3\">\r\n                                    Product list\r\n                                </h3>\r\n                                <Col className='d-flex justify-content-end'>\r\n                                    <Button onClick={createProductHandler}>\r\n                                        <i className='fas fa-plus'></i> Create Product\r\n                                    </Button>\r\n                                </Col>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*Product list*/}\r\n\r\n                        <div>\r\n\r\n\r\n                            {loadingDelete && <Loader/>}\r\n                            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n                            {loadingCreate && <Loader/>}\r\n                            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n                            {loading\r\n                                ? (<Loader/>)\r\n                                : error\r\n                                    ? (<Message variant='danger'>{error}</Message>)\r\n                                    : (\r\n                                        <div>\r\n                                            <Table striped bordered hover responsive className='table-sm'>\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>NAME</th>\r\n                                                    <th>PRICE</th>\r\n                                                    <th>CATEGORY</th>\r\n                                                    <th>BRAND</th>\r\n                                                    <th></th>\r\n                                                </tr>\r\n                                                </thead>\r\n\r\n                                                <tbody>\r\n                                                {products.map(product => (\r\n                                                    <tr key={product._id}>\r\n                                                        <td>{product._id}</td>\r\n                                                        <td>{product.name}</td>\r\n                                                        <td>${product.price}</td>\r\n                                                        <td>{product.category}</td>\r\n                                                        <td>{product.brand}</td>\r\n\r\n                                                        <td>\r\n                                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                                <Button variant='light' className='btn-sm'>\r\n                                                                    <i className='fas fa-edit'></i>\r\n                                                                </Button>\r\n                                                            </LinkContainer>\r\n\r\n                                                            <Button variant='danger' className='btn-sm'\r\n                                                                    onClick={() => deleteHandler(product._id)}>\r\n                                                                <i className='fas fa-trash'></i>\r\n                                                            </Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                            <div className=\"row justify-content-center mb-4\">\r\n\r\n\r\n                                                <nav className=\"mb-4\">\r\n\r\n                                                    <ul className=\"pagination pagination-circle pg-blue mb-0\">\r\n\r\n                                                        <li className=\"page-item\">\r\n\r\n                                                            <Link\r\n                                                                className=\"page-link waves-effect waves-effect\"\r\n\r\n                                                                to={`/admin/productlist/page/${page == 1 ? 1 : page - 1}`}\r\n                                                            >\r\n\r\n                                                                <span aria-hidden=\"true\">«</span>\r\n                                                                <span className=\"sr-only\">Previous</span>\r\n\r\n                                                            </Link>\r\n\r\n                                                        </li>\r\n\r\n                                                        {\r\n                                                            range(page - 3, page + 3, pages).map((x) => (\r\n                                                                <li className={`page-item ${x === page ? 'active' : ''}`}>\r\n                                                                    <Link\r\n                                                                        className=\"page-link waves-effect waves-effect\"\r\n                                                                        key={x}\r\n                                                                        to={`/admin/productlist/page/${x}`}\r\n                                                                    >\r\n                                                                        {x}\r\n                                                                    </Link>\r\n                                                                </li>\r\n                                                            ))}\r\n\r\n\r\n                                                        <li className=\"page-item\">\r\n\r\n\r\n                                                            <Link\r\n                                                                className=\"page-link waves-effect waves-effect\"\r\n\r\n                                                                to={`/admin/productlist/page/${page >= pages ? pages : page + 1}`}\r\n                                                            >\r\n\r\n                                                                <span aria-hidden=\"true\">»</span>\r\n                                                                <span className=\"sr-only\">Next</span>\r\n\r\n                                                            </Link>\r\n\r\n                                                        </li>\r\n\r\n\r\n                                                    </ul>\r\n\r\n                                                </nav>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                        </div>\r\n\r\n                        {/*    Product list*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\OrderListScreen.js",["378"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        // <div>\r\n        //     <h1>Orders</h1>\r\n        //     {loading\r\n        //         ? (<Loader />)\r\n        //         : error\r\n        //             ? (<Message variant='danger'>{error}</Message>)\r\n        //             : (\r\n        //                 <Table striped bordered hover responsive className='table-sm'>\r\n        //                     <thead>\r\n        //                         <tr>\r\n        //                             <th>ID</th>\r\n        //                             <th>USER</th>\r\n        //                             <th>DATE</th>\r\n        //                             <th>Total</th>\r\n        //                             <th>PAID</th>\r\n        //                             <th>DELIVERED</th>\r\n        //                             <th></th>\r\n        //                         </tr>\r\n        //                     </thead>\r\n        //\r\n        //                     <tbody>\r\n        //                         {orders.map(order => (\r\n        //                             <tr key={order._id}>\r\n        //                                 <td>{order._id}</td>\r\n        //                                 <td>{order.user && order.user.name}</td>\r\n        //                                 <td>{order.createdAt.substring(0, 10)}</td>\r\n        //                                 <td>${order.totalPrice}</td>\r\n        //\r\n        //                                 <td>{order.isPaid ? (\r\n        //                                     order.paidAt.substring(0, 10)\r\n        //                                 ) : (\r\n        //                                         <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n        //                                     )}\r\n        //                                 </td>\r\n        //\r\n        //                                 <td>{order.isDelivered ? (\r\n        //                                     order.deliveredAt.substring(0, 10)\r\n        //                                 ) : (\r\n        //                                         <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n        //                                     )}\r\n        //                                 </td>\r\n        //\r\n        //                                 <td>\r\n        //                                     <LinkContainer to={`/order/${order._id}`}>\r\n        //                                         <Button variant='light' className='btn-sm'>\r\n        //                                             Details\r\n        //                                         </Button>\r\n        //                                     </LinkContainer>\r\n        //\r\n        //\r\n        //                                 </td>\r\n        //                             </tr>\r\n        //                         ))}\r\n        //                     </tbody>\r\n        //                 </Table>\r\n        //             )}\r\n        // </div>\r\n\r\n\r\n\r\n          <div className=\"container-for-admin\">\r\n\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 col-md-3 \">\r\n\r\n\r\n                        <div className=\"list-group list-group-flush card mb-4 wow fadeIn \">\r\n                            <h4 className=\"list-group-item list-group-item-action waves-effect\" style={{background:'rgba(0,0,0,.05)', textAlign:'center'}}>\r\n                                <span >Admin</span>\r\n                            </h4>\r\n                            <Link to={`/admin/dashboard`} className=\"list-group-item list-group-item-action waves-effect\">\r\n                                <i className=\"fa fa-chart-line mr-3\"></i>Dashboard\r\n                            </Link>\r\n                            <Link to={`/admin/productlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('productlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Product</Link>\r\n                            <Link to={`/admin/userlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('userlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-user mr-3\"></i>User</Link>\r\n                            <Link to={`/admin/orderlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('orderlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-shopping-cart mr-3\"></i>Order</Link>\r\n                             <Link to={`/admin/reviewlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('reviewlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Review</Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <div className=\"card mb-4 wow fadeIn\">\r\n                            <div className=\"card-body d-sm-flex justify-content-between\" style={{padding:'5px'}} >\r\n\r\n                                <h3 className=\"pt-3 pl-3\">\r\n                                    Order List\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*Product list*/}\r\n\r\n                      <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n\r\n                        {/*    Product list*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\SearchScreen.js",["379","380"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport {listProductCategories, listProducts} from '../actions/productActions';\r\n// import LoadingBox from '../components/LoadingBox';\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n// import Message from '../components/Message';\r\nimport Product from '../components/Product';\r\nimport Rating from '../components/Rating';\r\nimport { prices, ratings } from '../utils';\r\nimport {Col, Container} from \"react-bootstrap\";\r\n\r\nexport default function SearchScreen(props) {\r\n\r\n  const {\r\n    name = 'all',\r\n    category = 'all',\r\n    min = 0,\r\n    max = 1000000,\r\n    rating = 'all',\r\n    order = 'createdAt',\r\n    pageNumber = 1,\r\n  } = useParams();\r\n  const dispatch = useDispatch();\r\n  console.log(\"PageNumberSearc: \",pageNumber)\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n  useEffect(() => {\r\n    console.log(\"PageNumSearchEffect: \", pageNumber)\r\n    dispatch(\r\n      listProducts({\r\n        pageNumber,\r\n        name: name !== 'all' ? name : '',\r\n        category: category !== 'all' ? category : '',\r\n        min,\r\n        max,\r\n        rating: rating !== 'all' ? rating : '',\r\n        order,\r\n      })\r\n    );\r\n  }, [category, dispatch, max, min, name, order, rating, pageNumber]);\r\n\r\n\r\n\r\n\r\n  const productCategoryList = useSelector((state) => state.productCategoryList);\r\n  const {\r\n    loading: loadingCategories,\r\n    error: errorCategories,\r\n    categories,\r\n  } = productCategoryList;\r\n\r\n    useEffect(() => {\r\n    dispatch(listProductCategories());\r\n  }, [dispatch]);\r\n\r\n\r\n  const getFilterUrl = (filter) => {\r\n    const filterPage = filter.page || pageNumber;\r\n    const filterCategory = filter.category || category;\r\n    const filterName = filter.name || name;\r\n    const filterRating = filter.rating || rating;\r\n    const sortOrder = filter.order || order;\r\n    const filterMin = filter.min ? filter.min : filter.min === 0 ? 0 : min;\r\n    const filterMax = filter.max ? filter.max : filter.max === 0 ? 0 : max;\r\n    return `/search/category/${filterCategory}/name/${filterName}/min/${filterMin}/max/${filterMax}/rating/${filterRating}/order/${sortOrder}/pageNumber/${filterPage}`;\r\n  };\r\n  return (\r\n      <Container>\r\n    <div>\r\n\r\n\r\n\r\n\r\n      {/*<div className=\"row\">*/}\r\n      {/*  {loading ? (*/}\r\n      {/*    <Loader/>*/}\r\n      {/*  ) : error ? (*/}\r\n      {/*    <Message variant=\"danger\">{error}</Message>*/}\r\n      {/*  ) : (*/}\r\n      {/*    <div>{products.length} Results</div>*/}\r\n      {/*  )}*/}\r\n      {/*  <div>*/}\r\n      {/*    Sort by{' '}*/}\r\n      {/*    <select*/}\r\n      {/*      value={order}*/}\r\n      {/*      onChange={(e) => {*/}\r\n      {/*        navigate(getFilterUrl({ order: e.target.value }));*/}\r\n      {/*      }}*/}\r\n      {/*    >*/}\r\n      {/*      <option value=\"newest\">Newest Arrivals</option>*/}\r\n      {/*      <option value=\"lowest\">Price: Low to High</option>*/}\r\n      {/*      <option value=\"highest\">Price: High to Low</option>*/}\r\n      {/*      <option value=\"toprated\">Avg. Customer Reviews</option>*/}\r\n      {/*    </select>*/}\r\n      {/*  </div>*/}\r\n      {/*</div>*/}\r\n      {/*<div className=\"row top\">*/}\r\n      {/*  <div className=\"col-1\">*/}\r\n      {/*    <h3>Department</h3>*/}\r\n      {/*    <div>*/}\r\n      {/*      {loadingCategories ? (*/}\r\n      {/*        <Loader/>*/}\r\n      {/*      ) : errorCategories ? (*/}\r\n      {/*        <Message variant=\"danger\">{errorCategories}</Message>*/}\r\n      {/*      ) : (*/}\r\n      {/*        <ul>*/}\r\n      {/*          <li>*/}\r\n      {/*            <Link*/}\r\n      {/*              className={'all' === category.category ? 'active' : ''}*/}\r\n      {/*              to={getFilterUrl({ category: 'all' })}*/}\r\n      {/*            >*/}\r\n      {/*              Any*/}\r\n      {/*            </Link>*/}\r\n      {/*          </li>*/}\r\n      {/*          {categories.map((c) => (*/}\r\n      {/*            <li key={c}>*/}\r\n      {/*              <Link*/}\r\n      {/*                className={c.category === category ? 'active' : ''}*/}\r\n      {/*                to={getFilterUrl({ category: c.category })}*/}\r\n      {/*              >*/}\r\n      {/*                {c.category}*/}\r\n      {/*              </Link>*/}\r\n      {/*            </li>*/}\r\n      {/*          ))}*/}\r\n      {/*        </ul>*/}\r\n      {/*      )}*/}\r\n      {/*    </div>*/}\r\n      {/*    <div>*/}\r\n      {/*      <h3>Price</h3>*/}\r\n      {/*      <ul>*/}\r\n      {/*        {prices.map((p) => (*/}\r\n      {/*          <li key={p.name}>*/}\r\n      {/*            <Link*/}\r\n      {/*              to={getFilterUrl({ min: p.min, max: p.max })}*/}\r\n      {/*              className={*/}\r\n      {/*                `${p.min}-${p.max}` === `${min}-${max}` ? 'active' : ''*/}\r\n      {/*              }*/}\r\n      {/*            >*/}\r\n      {/*              {p.name}*/}\r\n      {/*            </Link>*/}\r\n      {/*          </li>*/}\r\n      {/*        ))}*/}\r\n      {/*      </ul>*/}\r\n      {/*    </div>*/}\r\n      {/*    <div>*/}\r\n      {/*      <h3>Avg. Customer Review</h3>*/}\r\n      {/*      <ul>*/}\r\n      {/*        {ratings.map((r) => (*/}\r\n      {/*          <li key={r.name}>*/}\r\n      {/*            <Link*/}\r\n      {/*              to={getFilterUrl({ rating: r.rating })}*/}\r\n      {/*              className={`${r.rating}` === `${rating}` ? 'active' : ''}*/}\r\n      {/*            >*/}\r\n      {/*              <Rating caption={' & up'} rating={r.rating}></Rating>*/}\r\n      {/*            </Link>*/}\r\n      {/*          </li>*/}\r\n      {/*        ))}*/}\r\n      {/*      </ul>*/}\r\n      {/*    </div>*/}\r\n      {/*  </div>*/}\r\n      {/*  <div className=\"col-3\">*/}\r\n      {/*    {loading ? (*/}\r\n      {/*      <Loader/>*/}\r\n      {/*    ) : error ? (*/}\r\n      {/*      <Message variant=\"danger\">{error}</Message>*/}\r\n      {/*    ) : (*/}\r\n      {/*      <>*/}\r\n      {/*        {products.length === 0 && (*/}\r\n      {/*          <Message>No Product Found</Message>*/}\r\n      {/*        )}*/}\r\n      {/*        <div className=\"row center\">*/}\r\n      {/*          {products.map((product) => (*/}\r\n      {/*            <Product key={product._id} product={product}></Product>*/}\r\n      {/*          ))}*/}\r\n      {/*        </div>*/}\r\n      {/*        <div className=\"row center pagination\">*/}\r\n      {/*          {[...Array(pages).keys()].map((x) => (*/}\r\n      {/*            <Link*/}\r\n      {/*              className={x + 1 === page ? 'active' : ''}*/}\r\n      {/*              key={x + 1}*/}\r\n      {/*              to={getFilterUrl({ page: x + 1 })}*/}\r\n      {/*            >*/}\r\n      {/*              {x + 1}*/}\r\n      {/*            </Link>*/}\r\n      {/*          ))}*/}\r\n      {/*        </div>*/}\r\n      {/*      </>*/}\r\n      {/*    )}*/}\r\n      {/*  </div>*/}\r\n      {/*</div>*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"row pt-4\">\r\n\r\n        \r\n        <div className=\"col-lg-3\">\r\n\r\n          <div className=\"\">\r\n\r\n            \r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-6 col-lg-12 mb-5\">\r\n\r\n                \r\n                <h5 className=\"font-weight-bold dark-grey-text\"><strong>Order By</strong></h5>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n\r\n                <div className=\"form-group \">\r\n                <Link to={getFilterUrl({ order: '-createdAt' })} style={'-createdAt'===order?{color:'#2196f3',fontWeight: 'bold'}:{}} className={`form-check-label`}>Last</Link>\r\n                </div>\r\n\r\n                <div className=\"form-group \">\r\n                  <Link to={getFilterUrl({ order: 'price' })} style={'price'===order?{color:'#2196f3',fontWeight: 'bold'}:{}} className={`form-check-label`}>Price: low to high</Link>\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <Link to={getFilterUrl({ order: '-price' })} style={'-price'===order?{color:'#2196f3',fontWeight: 'bold'}:{}} className={`form-check-label`}>Price: high to low</Link>\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n              \r\n              <div className=\"col-md-6 col-lg-12 mb-5\">\r\n\r\n                <h5 className=\"font-weight-bold dark-grey-text\"><strong>Category</strong></h5>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n\r\n\r\n                 {/*Category*/}\r\n                  <div>\r\n            {loadingCategories ? (\r\n              <Loader/>\r\n            ) : errorCategories ? (\r\n              <Message variant=\"danger\">{errorCategories}</Message>\r\n            ) : (\r\n              <div>\r\n                <div className=\"form-group \">\r\n                    <Link to={getFilterUrl({ category: 'all' })} style={'all'===category?{color:'#2196f3',fontWeight: 'bold'}:{}}  className={`form-check-label`}>All</Link>\r\n                </div>\r\n                {categories.map((c) => (\r\n                    <div key={c.category} className=\"form-group \">\r\n                    <Link to={getFilterUrl({ category: c.category })} style={c.category === category?{color:'#2196f3',fontWeight: 'bold'}:{}}  className={`form-check-label`}> {c.category}</Link>\r\n                </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n                {/*End Category*/}\r\n\r\n                \r\n              </div>\r\n\r\n              \r\n            </div>\r\n            \r\n\r\n            \r\n            <div className=\"row\">\r\n\r\n              \r\n              <div className=\"col-md-6 col-lg-12 mb-5\">\r\n\r\n                <h5 className=\"font-weight-bold dark-grey-text\"><strong>Price</strong></h5>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n                 <div className='mt-3'>\r\n              {prices.map((p) => (\r\n                   <div key={p.name} className=\"form-group \">\r\n                    <Link  to={getFilterUrl({ min: p.min, max: p.max })} style={`${p.min}-${p.max}` === `${min}-${max}`?{color:'#2196f3',fontWeight: 'bold'}:{}}  className={`form-check-label`}> {p.name}</Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-12 mb-5\">\r\n\r\n                <h5 className=\"font-weight-bold dark-grey-text\"><strong>Rating</strong></h5>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n\r\n                <div>\r\n              {ratings.map((r) => (\r\n                  <div key={r.name} className=\"row ml-1\">\r\n                      <Link  to={getFilterUrl({ rating: r.rating })} style={`${r.rating}` === `${rating}`?{color:'#2196f3',fontWeight: 'bold'}:{}} className={`form-check-label`}> <Rating caption={' & up'} value={r.rating}></Rating></Link>\r\n                </div>\r\n\r\n              ))}\r\n            </div>\r\n\r\n              </div>\r\n              \r\n\r\n            </div>\r\n            \r\n\r\n          </div>\r\n\r\n        </div>\r\n        \r\n\r\n        \r\n        <div className=\"col-lg-9\">\r\n          <section className=\"section pt-4\">\r\n\r\n\r\n            <div className=\"row\">\r\n\r\n              {loading ? (\r\n            <Loader/>\r\n          ) : error ? (\r\n            <Message variant=\"danger\">{error}</Message>\r\n          ) : (\r\n              <>\r\n               {products.length === 0 && (\r\n                <Message>No Product Found</Message>\r\n              )}\r\n                {products.map(product => (\r\n                    <Col key={product._id} md={12} lg={4} className={'mb-4'}>\r\n                      <Product product={product}/>\r\n                    </Col>\r\n                ))}\r\n               </>\r\n            )}\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"row justify-content-center mb-4\">\r\n\r\n\r\n              <nav className=\"mb-4\">\r\n\r\n                <ul className=\"pagination pagination-circle pg-blue mb-0\">\r\n\r\n\r\n                  {/*<li className=\"page-item disabled clearfix d-none d-md-block\"><a*/}\r\n                  {/*    className=\"page-link waves-effect waves-effect\">First</a></li>*/}\r\n\r\n\r\n                  <li className=\"page-item\">\r\n\r\n                    <Link\r\n                    className=\"page-link waves-effect waves-effect\"\r\n\r\n                    to={getFilterUrl({ page: page==1?1:page-1 })}\r\n                  >\r\n\r\n                    <span aria-hidden=\"true\">«</span>\r\n                      <span className=\"sr-only\">Previous</span>\r\n\r\n                  </Link>\r\n\r\n                  </li>\r\n\r\n\r\n                  {[...Array(pages).keys()].map((x) => (\r\n                      <li className={`page-item ${x + 1 === page ? 'active' : ''}`} >\r\n                  <Link\r\n                    className=\"page-link waves-effect waves-effect\"\r\n                    key={x + 1}\r\n                    to={getFilterUrl({ page: x + 1 })}\r\n                  >\r\n                    {x + 1}\r\n                  </Link>\r\n                        </li>\r\n                ))}\r\n                  <li className=\"page-item\">\r\n\r\n\r\n                     <Link\r\n                    className=\"page-link waves-effect waves-effect\"\r\n\r\n                    to={getFilterUrl({ page: page>=pages?pages:page+1 })}\r\n                  >\r\n\r\n                    <span aria-hidden=\"true\">»</span>\r\n                      <span className=\"sr-only\">Next</span>\r\n\r\n                  </Link>\r\n\r\n                  </li>\r\n\r\n\r\n\r\n\r\n                </ul>\r\n\r\n              </nav>\r\n\r\n\r\n            </div>\r\n\r\n\r\n          </section>\r\n          \r\n\r\n        </div>\r\n        \r\n\r\n      </div>\r\n    </div>\r\n        </Container>\r\n  );\r\n}\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\DashboardScreen.js",["381","382","383","384","385","386","387","388","389"],"import React, {useState, useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {listOrders} from '../actions/orderActions'\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport SentimentCircleChart from \"../components/SentimentCircleChart\";\r\nimport SentimentHorizontalBarChart from \"../components/SentimentHorizontalBarChart\";\r\nimport SentimentLineChart from \"../components/SentimentLineChart\";\r\nimport SimilarWordCloud from \"../components/SimilarWordCloud\";\r\n\r\nfunction DashboardScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        // <div>\r\n        //     <h1>Orders</h1>\r\n        //     {loading\r\n        //         ? (<Loader />)\r\n        //         : error\r\n        //             ? (<Message variant='danger'>{error}</Message>)\r\n        //             : (\r\n        //                 <Table striped bordered hover responsive className='table-sm'>\r\n        //                     <thead>\r\n        //                         <tr>\r\n        //                             <th>ID</th>\r\n        //                             <th>USER</th>\r\n        //                             <th>DATE</th>\r\n        //                             <th>Total</th>\r\n        //                             <th>PAID</th>\r\n        //                             <th>DELIVERED</th>\r\n        //                             <th></th>\r\n        //                         </tr>\r\n        //                     </thead>\r\n        //\r\n        //                     <tbody>\r\n        //                         {orders.map(order => (\r\n        //                             <tr key={order._id}>\r\n        //                                 <td>{order._id}</td>\r\n        //                                 <td>{order.user && order.user.name}</td>\r\n        //                                 <td>{order.createdAt.substring(0, 10)}</td>\r\n        //                                 <td>${order.totalPrice}</td>\r\n        //\r\n        //                                 <td>{order.isPaid ? (\r\n        //                                     order.paidAt.substring(0, 10)\r\n        //                                 ) : (\r\n        //                                         <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n        //                                     )}\r\n        //                                 </td>\r\n        //\r\n        //                                 <td>{order.isDelivered ? (\r\n        //                                     order.deliveredAt.substring(0, 10)\r\n        //                                 ) : (\r\n        //                                         <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n        //                                     )}\r\n        //                                 </td>\r\n        //\r\n        //                                 <td>\r\n        //                                     <LinkContainer to={`/order/${order._id}`}>\r\n        //                                         <Button variant='light' className='btn-sm'>\r\n        //                                             Details\r\n        //                                         </Button>\r\n        //                                     </LinkContainer>\r\n        //\r\n        //\r\n        //                                 </td>\r\n        //                             </tr>\r\n        //                         ))}\r\n        //                     </tbody>\r\n        //                 </Table>\r\n        //             )}\r\n        // </div>\r\n\r\n\r\n        <div className=\"container-for-admin\">\r\n\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 col-md-3 \">\r\n\r\n\r\n                        <div className=\"list-group list-group-flush card mb-4 wow fadeIn \">\r\n                            <h4 className=\"list-group-item list-group-item-action waves-effect\"\r\n                                style={{background: 'rgba(0,0,0,.05)', textAlign: 'center'}}>\r\n                                <span>Admin</span>\r\n                            </h4>\r\n                            <Link to={`/admin/dashboard`}\r\n                                  className=\"list-group-item list-group-item-action waves-effect\">\r\n                                <i className=\"fa fa-chart-line mr-3\"></i>Dashboard\r\n                            </Link>\r\n                            <Link to={`/admin/productlist`}\r\n                                  className=\"list-group-item list-group-item-action waves-effect\"\r\n                                  style={useLocation().pathname.includes('productlist') ? {\r\n                                      color: '#2196f3',\r\n                                      fontWeight: 'bold'\r\n                                  } : {}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Product</Link>\r\n                            <Link to={`/admin/userlist`} className=\"list-group-item list-group-item-action waves-effect\"\r\n                                  style={useLocation().pathname.includes('userlist') ? {\r\n                                      color: '#2196f3',\r\n                                      fontWeight: 'bold'\r\n                                  } : {}}>\r\n                                <i className=\"fa fa-user mr-3\"></i>User</Link>\r\n                            <Link to={`/admin/orderlist`}\r\n                                  className=\"list-group-item list-group-item-action waves-effect\"\r\n                                  style={useLocation().pathname.includes('orderlist') ? {\r\n                                      color: '#2196f3',\r\n                                      fontWeight: 'bold'\r\n                                  } : {}}>\r\n                                <i className=\"fa fa-shopping-cart mr-3\"></i>Order</Link>\r\n                             <Link to={`/admin/reviewlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('reviewlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Review</Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <div className=\"card mb-4 wow fadeIn\">\r\n                            <div className=\"card-body d-sm-flex justify-content-between\" style={{padding: '5px'}}>\r\n\r\n                                <h3 className=\"pt-3 pl-3\">\r\n                                    Dashboard Sentiment Analysis\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*Product list*/}\r\n\r\n                        {/*Todo Dashboard here*/}\r\n                        <div className=\"row wow fadeIn\">\r\n\r\n\r\n                            <div className=\"col-lg-6 mb-4\">\r\n\r\n\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">\r\n                                        Most similar words cloud\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n\r\n                                        {/*<canvas id=\"myChart\"></canvas>*/}\r\n                                        <SimilarWordCloud></SimilarWordCloud>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-lg-6 mb-4\">\r\n\r\n\r\n                                <div className=\"card mb-4\">\r\n\r\n\r\n                                    <div className=\"card-header text-center\">\r\n                                        Total sentiment analysis\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"card-body\">\r\n\r\n                                        {/*<canvas id=\"pieChart\"></canvas>*/}\r\n                                        <SentimentCircleChart></SentimentCircleChart>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n<div className=\"col-lg-12 mb-4\">\r\n\r\n\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">\r\n                                        Sentiment analysis per rating\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n\r\n                                        {/*<canvas id=\"myChart\"></canvas>*/}\r\n                                        <SentimentHorizontalBarChart></SentimentHorizontalBarChart>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"col-lg-12 mb-4\">\r\n\r\n\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">\r\n                                        Sentiment analysis timeline\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n\r\n                                        {/*<canvas id=\"myChart\"></canvas>*/}\r\n                                        <SentimentLineChart></SentimentLineChart>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {/*    Product list*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardScreen","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ForgotPasswordScreen.js",["390","391","392","393","394","395","396"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col, Container, Modal} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {forgotPassword, login} from '../actions/userActions'\r\n\r\nfunction ForgotPasswordScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    //Check if user login --> redirect to home page\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(forgotPassword(email))\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    //Get forgot password\r\n    const userForgotPasswordSelector = useSelector(state => state.userForgotPassword)\r\n    const {error: errorForgotPassword, loading: loadingForgotPassword, userForgotPassword} = userForgotPasswordSelector\r\n\r\n    //set show everytime when userForgotPassword is updated\r\n    useEffect(() => {\r\n        console.log('userForgotPassword', userForgotPassword)\r\n        if (userForgotPassword != undefined && userForgotPassword.status == 'OK') {\r\n            setShow(true)\r\n        } else setShow(false)\r\n    }, [userForgotPasswordSelector])\r\n\r\n    return (\r\n        <Container>\r\n            <FormContainer>\r\n                <h1>Reset password</h1>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    {/*<Form.Group controlId='password'>*/}\r\n                    {/*    <Form.Label>Password</Form.Label>*/}\r\n                    {/*    <Form.Control*/}\r\n                    {/*        type='password'*/}\r\n                    {/*        placeholder='Enter Password'*/}\r\n                    {/*        value={password}*/}\r\n                    {/*        onChange={(e) => setPassword(e.target.value)}*/}\r\n                    {/*    >*/}\r\n                    {/*    </Form.Control>*/}\r\n                    {/*</Form.Group>*/}\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Reset Password\r\n                    </Button>\r\n                </Form>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </FormContainer>\r\n            {loadingForgotPassword && <Loader/>}\r\n            {errorForgotPassword && <Message variant='danger'>{errorForgotPassword}</Message>}\r\n            {(userForgotPassword != undefined && userForgotPassword.status == 'OK') ? (\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Check Your Email</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>If we have an account for the username or email address you provided, we have emailed a link to reset your password. The link will be valid for one day.</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            ) : <></>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ResetPasswordScreen.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"import React, {useState, useEffect} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport {Form, Button, Row, Col, Container, Modal} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {forgotPassword, login, resetPassword} from '../actions/userActions'\r\n\r\nimport {useForm} from 'react-hook-form'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\nimport * as Yup from 'yup'\r\n\r\nfunction ForgotPasswordScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const {token} = useParams();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    //Check if user login --> redirect to home page\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    const formSchema = Yup.object().shape({\r\n        password: Yup.string()\r\n            .required('Password is mandatory')\r\n            .min(3, 'Password must be at 3 char long'),\r\n        confirmPwd: Yup.string()\r\n            .required('Password is mandatory')\r\n            .oneOf([Yup.ref('password')], 'Passwords does not match'),\r\n    })\r\n    const formOptions = {resolver: yupResolver(formSchema)}\r\n    const {register, handleSubmit, reset, formState} = useForm(formOptions)\r\n    const {errors} = formState\r\n\r\n    function onSubmit(data) {\r\n        console.log(\"Data submitted\")\r\n        console.log(JSON.stringify(data, null, 4))\r\n        console.log(data.password)\r\n        console.log(token)\r\n        dispatch(resetPassword(token, data.password))\r\n        return false\r\n    }\r\n\r\n\r\n    // const submitHandler = (e) => {\r\n    //     e.preventDefault()\r\n    //     dispatch(forgotPassword(email))\r\n    // }\r\n    //\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    //Get forgot password\r\n    const userResetPasswordSelector = useSelector(state => state.userResetPassword)\r\n    const {error: errorResetPassword, loading: loadingResetPassword, userResetPassword} = userResetPasswordSelector\r\n\r\n    //set show everytime when userForgotPassword is updated\r\n    useEffect(() => {\r\n        console.log('userResetPassword', userResetPassword)\r\n        if (userResetPassword != undefined && userResetPassword.status == 'OK') {\r\n            setShow(true)\r\n        } else setShow(false)\r\n    }, [userResetPasswordSelector])\r\n\r\n    return (\r\n        <Container>\r\n            <FormContainer>\r\n                <h2>Reset password</h2>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            {...register('password')}\r\n                            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n                        />\r\n                        <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Confirm Password</label>\r\n                        <input\r\n                            name=\"confirmPwd\"\r\n                            type=\"password\"\r\n                            {...register('confirmPwd')}\r\n                            className={`form-control ${errors.confirmPwd ? 'is-invalid' : ''}`}\r\n                        />\r\n                        <div className=\"invalid-feedback\">{errors.confirmPwd?.message}</div>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </FormContainer>\r\n            {/*<FormContainer>*/}\r\n            {/*    <h1>Reset password</h1>*/}\r\n            {/*    {error && <Message variant='danger'>{error}</Message>}*/}\r\n            {/*    {loading && <Loader/>}*/}\r\n            {/*    <Form onSubmit={submitHandler}>*/}\r\n\r\n            {/*        <Form.Group controlId='email'>*/}\r\n            {/*            <Form.Label>Email Address</Form.Label>*/}\r\n            {/*            <Form.Control*/}\r\n            {/*                type='email'*/}\r\n            {/*                placeholder='Enter Email'*/}\r\n            {/*                value={email}*/}\r\n            {/*                onChange={(e) => setEmail(e.target.value)}*/}\r\n            {/*            >*/}\r\n            {/*            </Form.Control>*/}\r\n            {/*        </Form.Group>*/}\r\n\r\n\r\n            {/*        /!*<Form.Group controlId='password'>*!/*/}\r\n            {/*        /!*    <Form.Label>Password</Form.Label>*!/*/}\r\n            {/*        /!*    <Form.Control*!/*/}\r\n            {/*        /!*        type='password'*!/*/}\r\n            {/*        /!*        placeholder='Enter Password'*!/*/}\r\n            {/*        /!*        value={password}*!/*/}\r\n            {/*        /!*        onChange={(e) => setPassword(e.target.value)}*!/*/}\r\n            {/*        /!*    >*!/*/}\r\n            {/*        /!*    </Form.Control>*!/*/}\r\n            {/*        /!*</Form.Group>*!/*/}\r\n\r\n            {/*        <Button type='submit' variant='primary'>*/}\r\n            {/*            Reset Password*/}\r\n            {/*        </Button>*/}\r\n            {/*    </Form>*/}\r\n\r\n            {/*    <Row className='py-3'>*/}\r\n            {/*        <Col>*/}\r\n            {/*            New Customer? <Link*/}\r\n            {/*            to={redirect ? `/register?redirect=${redirect}` : '/register'}>*/}\r\n            {/*            Register*/}\r\n            {/*        </Link>*/}\r\n            {/*        </Col>*/}\r\n            {/*    </Row>*/}\r\n\r\n            {/*</FormContainer>*/}\r\n\r\n\r\n            {loadingResetPassword && <Loader/>}\r\n            {errorResetPassword && <Message variant='danger'>{errorResetPassword}</Message>}\r\n            {(userResetPassword != undefined && userResetPassword.status == 'OK') ? (\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Password Reset Successfully</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>Password Reset Successfully</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            ) : <></>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordScreen\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SentimentLineChart.js",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439"],"//import React\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {UserData} from \"../Data\";\r\nimport {Chart as ChartJS} from 'chart.js/auto';\r\nimport {\r\n    listAllProducts,\r\n    listProductCategories,\r\n    productsIdName,\r\n    sentimentCircleChart,\r\n    sentimentLineChart\r\n} from \"../actions/productActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sentimentBarChartReducer, sentimentLineChartReducer} from \"../reducers/productReducers\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\r\nimport us from 'date-fns/locale/en-US';\r\n\r\nregisterLocale('us', us)\r\n\r\nfunction LineChart() {\r\n    const dispatch = useDispatch()\r\n\r\n    //send dispatch load  list products has only id, name to store\r\n    useEffect(() => {\r\n        dispatch(productsIdName())\r\n    }, [dispatch])\r\n\r\n\r\n    //send dispatch load list categories\r\n    useEffect(() => {\r\n        dispatch(listProductCategories());\r\n    }, [dispatch]);\r\n\r\n    //send dispatch load init chart data\r\n    useEffect(() => {\r\n        dispatch(sentimentLineChart('', ''));\r\n    }, [dispatch]);\r\n\r\n    //get all products id name from store\r\n    const productIdName = useSelector(state => state.productIdName)\r\n    const {loading: loadingProductIdName, error: errorProductIdName, products: productsList} = productIdName\r\n\r\n    //get all category from store\r\n    const category = useSelector(state => state.productCategoryList)\r\n    const {loading: loadingCategory, error: errorCategory, categories: categoryList} = category\r\n\r\n    //get sentiment circle chart from store\r\n    const sentimentLine = useSelector(state => state.sentimentLineChart)\r\n    const {loading: loadingSentimentLine, error: errorSentimentLine, sentiments} = sentimentLine\r\n\r\n    // current type\r\n    const [currentType, setCurrentType] = useState('All')\r\n    // current type\r\n    const [currentTypeDateFilter, setcurrentTypeDateFilter] = useState('year')\r\n    //current product\r\n    const [currentProductId, setCurrentProductId] = useState(1)\r\n    //current category\r\n    const [currentCategory, setCurrentCategory] = useState('vivo')\r\n    //select options\r\n    const [selectOptions, setSelectOptions] = useState([])\r\n\r\n    //sentiment circle chart data\r\n    const [sentimentLineChartData, setSentimentLineChartData] = useState({})\r\n\r\n\r\n    const [startDate, setStartDate] = useState(new Date('2017-01-01'));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const handleChangeType = (e) => {\r\n        let type = e.value\r\n        setCurrentType(type)\r\n        console.log('Type: ', type)\r\n\r\n        let options = []\r\n        if (type == 'Category') {\r\n            for (let i = 0; i < categoryList.length; i++) {\r\n                options.push({value: categoryList[i].category, label: categoryList[i].category})\r\n            }\r\n        } else if (type == 'Product') {\r\n            for (let i = 0; i < productsList.length; i++) {\r\n                options.push({value: productsList[i]._id, label: productsList[i].name})\r\n            }\r\n        } else if (type == 'All') {\r\n            reloadChart()\r\n        }\r\n        console.log('Options: ', options)\r\n        setSelectOptions(options)\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setCurrentCategory(e.value)\r\n        reloadChart()\r\n    }\r\n\r\n    const handleChangeProductId = (e) => {\r\n        setCurrentProductId(e.value)\r\n        reloadChart()\r\n    }\r\n    const handleChangeTypeDateFilter = (e) => {\r\n        setcurrentTypeDateFilter(e.value)\r\n        console.log('Type: ', e.value)\r\n        if(e.value == 'month'){\r\n            setStartDate(new Date('2022-01-01'))\r\n            setEndDate(new Date())\r\n        }else if(e.value == 'day'){\r\n            console.log('Dang vao day')\r\n            setStartDate(new Date('2022-07-15'))\r\n            setEndDate(new Date())\r\n        }\r\n\r\n        //  let _startDate = startDate.toISOString().split('T')[0]\r\n        // let _endDate = endDate.toISOString().split('T')[0]\r\n        // console.log('_startDate: ', _startDate)\r\n        // console.log('_endDate: ', _endDate)\r\n        reloadChart()\r\n    }\r\n\r\n    const reloadChart = () => {\r\n        let _startDate = startDate.toISOString().split('T')[0]\r\n        let _endDate = endDate.toISOString().split('T')[0]\r\n        if (currentType == 'All') {\r\n            dispatch(sentimentLineChart(\"\", \"\", _startDate, _endDate, currentTypeDateFilter))\r\n        } else if (currentType == 'Product') {\r\n            dispatch(sentimentLineChart('', currentProductId, _startDate, _endDate, currentTypeDateFilter))\r\n        } else dispatch(sentimentLineChart(currentCategory, \"\", _startDate, _endDate, currentTypeDateFilter))\r\n\r\n\r\n    }\r\n    const handleChangeStartDate = (date) => {\r\n        setStartDate(date)\r\n        reloadChart()\r\n    };\r\n    const handleChangeEndDate = (date) => {\r\n        setEndDate(date)\r\n        reloadChart()\r\n    };\r\n\r\n    //reaload chart data\r\n    useEffect(() => {\r\n        let categories = []\r\n        console.log(\"Sentimentttttttttt: \",sentiments)\r\n        if (currentTypeDateFilter == 'year') {\r\n            categories = sentiments.map(sentiment => sentiment.year)\r\n        } else if (currentTypeDateFilter == 'month') {\r\n            categories = sentiments.map(sentiment => sentiment.month + \"/\" + sentiment.year)\r\n        } else\r\n        {\r\n            categories = sentiments.map(sentiment => sentiment.createdAt)\r\n        }\r\n       categories = categories.map(date=>{\r\n           if (typeof(date) == 'string' && date.includes('T')){\r\n\r\n               return date.split('T')[0]\r\n           }\r\n           return date\r\n\r\n       })\r\n        // categories.map(date=>console.log('date: ', date))\r\n\r\n        let categoriesSet = new Set(categories)\r\n        let categoriesArray = Array.from(categoriesSet)\r\n        setSentimentLineChartData(\r\n            {\r\n\r\n                series: [\r\n                    {\r\n                        name: \"Negative\",\r\n                        data: sentiments.filter((sentiment) => {\r\n                            return sentiment.sentiment === 0\r\n                        }).map((sentiment) => {\r\n                            return sentiment.total\r\n                        })\r\n                    },\r\n                    {\r\n                        name: \"Neutral\",\r\n                        data: sentiments.filter((sentiment) => {\r\n                            return sentiment.sentiment === 1\r\n                        }).map((sentiment) => {\r\n                            return sentiment.total\r\n                        })\r\n                    },\r\n                    {\r\n                        name: \"Positive\",\r\n                        data: sentiments.filter((sentiment) => {\r\n                            return sentiment.sentiment === 2\r\n                        }).map((sentiment) => {\r\n                            return sentiment.total\r\n                        })\r\n                    }\r\n                ],\r\n                options: {\r\n                    chart: {\r\n                        height: 350,\r\n                        type: 'line',\r\n                        dropShadow: {\r\n                            enabled: true,\r\n                            color: '#000',\r\n                            top: 18,\r\n                            left: 7,\r\n                            blur: 10,\r\n                            opacity: 0.2\r\n                        },\r\n                        toolbar: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    colors: ['#ff6384', '#ff9f40', '#4bc0c0'],\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                    },\r\n                    stroke: {\r\n                        curve: 'smooth'\r\n                    },\r\n                    grid: {\r\n                        borderColor: '#e7e7e7',\r\n                        row: {\r\n                            colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                            opacity: 0.5\r\n                        },\r\n                    },\r\n                    markers: {\r\n                        size: 1\r\n                    },\r\n                    xaxis: {\r\n                        categories: categoriesArray,\r\n                        title: {\r\n                            text: currentTypeDateFilter.toUpperCase()\r\n                        },\r\n\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: 'Comments'\r\n                        },\r\n\r\n                    },\r\n                    legend: {\r\n                        position: 'top',\r\n                        horizontalAlign: 'right',\r\n                        floating: true,\r\n                        offsetY: -25,\r\n                        offsetX: -5\r\n                    }\r\n                },\r\n\r\n\r\n            })\r\n    }, [sentimentLine]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {loadingProductIdName\r\n                ? (<Loader/>)\r\n                : errorProductIdName\r\n                    ? (<Message variant='danger'>{errorProductIdName}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <div className='row'>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>Type</span>\r\n                                    <Select options={[\r\n                                        {value: 'All', label: 'All'},\r\n                                        {value: 'Category', label: 'Category'},\r\n                                        {value: 'Product', label: 'Product'}\r\n                                    ]} onChange={handleChangeType}/>\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n\r\n                                    {currentType == 'Product' ? (\r\n                                            <>\r\n                                                <span>{currentType}</span>\r\n                                                <Select options={selectOptions} onChange={handleChangeProductId}/>\r\n                                            </>\r\n                                        )\r\n                                        : currentType == 'Category' ? (\r\n                                                <>\r\n                                                    <span>{currentType}</span>\r\n                                                    <Select options={selectOptions} onChange={handleChangeCategory}/>\r\n                                                </>\r\n                                            )\r\n                                            : (\r\n                                                <div className='d-none'></div>\r\n                                            )\r\n\r\n                                    }\r\n                                </div>\r\n                                  <div className='col-sm-6 col-lg-12 mb-4'>\r\n                                    <span>Type date filter</span>\r\n                                    <Select options={[\r\n                                        {value: 'year', label: 'Year'},\r\n                                        {value: 'month', label: 'Month'},\r\n                                        {value: 'day', label: 'Date'}\r\n                                    ]} onChange={handleChangeTypeDateFilter}/>\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>From date</span>\r\n                                    <DatePicker locale=\"us\" selected={startDate} onChange={handleChangeStartDate}/>\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>To date</span>\r\n                                    <DatePicker locale=\"us\" selected={endDate} onChange={handleChangeEndDate}/>\r\n                                </div>\r\n                                {/*<div className='col-sm-6 col-lg-6 mb-4'>*/}\r\n                                {/*    <button className='btn btn-primary' onClick={handleLoadChart}>Load Chart</button>*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                            {sentimentLineChartData.series == undefined ? (<Loader/>) :\r\n                                sentimentLineChartData.series.length != 0 ? (\r\n                                    <Chart options={sentimentLineChartData.options}\r\n                                           series={sentimentLineChartData.series} type=\"line\"\r\n                                    />\r\n                                ) : (\r\n                                    <>\r\n                                    </>\r\n\r\n                                )}\r\n                        </div>\r\n                    )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default LineChart;","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SentimentHorizontalBarChart.js",["440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"//import React\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {UserData} from \"../Data\";\r\nimport {Chart as ChartJS} from 'chart.js/auto';\r\nimport {\r\n    listAllProducts,\r\n    listProductCategories,\r\n    productsIdName,\r\n    sentimentBarChart,\r\n    sentimentCircleChart\r\n} from \"../actions/productActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sentimentBarChartReducer, sentimentLineChartReducer} from \"../reducers/productReducers\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\r\nimport us from 'date-fns/locale/en-US';\r\n\r\nregisterLocale('us', us)\r\n\r\nfunction HorizontalBarChart() {\r\n    const dispatch = useDispatch()\r\n    console.log(\"Dang vaoooooooooooooooo\")\r\n\r\n    //send dispatch load  list products has only id, name to store\r\n    useEffect(() => {\r\n        dispatch(productsIdName())\r\n    }, [dispatch])\r\n\r\n\r\n    //send dispatch load list categories\r\n    useEffect(() => {\r\n        dispatch(listProductCategories());\r\n    }, [dispatch]);\r\n\r\n    //send dispatch load init chart data\r\n    useEffect(() => {\r\n        dispatch(sentimentBarChart('', ''));\r\n    }, [dispatch]);\r\n\r\n    //get all products id name from store\r\n    const productIdName = useSelector(state => state.productIdName)\r\n    const {loading: loadingProductIdName, error: errorProductIdName, products: productsList} = productIdName\r\n\r\n    //get all category from store\r\n    const category = useSelector(state => state.productCategoryList)\r\n    const {loading: loadingCategory, error: errorCategory, categories: categoryList} = category\r\n\r\n    //get sentiment circle chart from store\r\n    const sentimentBar = useSelector(state => state.sentimentBarChart)\r\n    const {loading: loadingSentimentBar, error: errorSentimentBar, sentiments} = sentimentBar\r\n\r\n    // current type\r\n    const [currentType, setCurrentType] = useState('All')\r\n    //current product\r\n    const [currentProductId, setCurrentProductId] = useState(1)\r\n    //current category\r\n    const [currentCategory, setCurrentCategory] = useState('vivo')\r\n    //select options\r\n    const [selectOptions, setSelectOptions] = useState([])\r\n\r\n    //sentiment circle chart data\r\n    const [sentimentCircleChartData, setSentimentCircleChartData] = useState({})\r\n\r\n    const [startDate, setStartDate] = useState(new Date('2017-01-01'));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const handleChangeType = (e) => {\r\n        let type = e.value\r\n        setCurrentType(type)\r\n        console.log('Type: ', type)\r\n\r\n        let options = []\r\n        if (type == 'Category') {\r\n            for (let i = 0; i < categoryList.length; i++) {\r\n                options.push({value: categoryList[i].category, label: categoryList[i].category})\r\n            }\r\n        } else if (type == 'Product') {\r\n            for (let i = 0; i < productsList.length; i++) {\r\n                options.push({value: productsList[i]._id, label: productsList[i].name})\r\n            }\r\n        }else if(type=='All'){\r\n            reloadChart()\r\n        }\r\n        console.log('Options: ', options)\r\n        setSelectOptions(options)\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setCurrentCategory(e.value)\r\n         reloadChart()\r\n    }\r\n\r\n    const handleChangeProductId = (e) => {\r\n        setCurrentProductId(e.value)\r\n         reloadChart()\r\n    }\r\n\r\n    const reloadChart = () => {\r\n        let _startDate = startDate.toISOString().split('T')[0]\r\n        let _endDate = endDate.toISOString().split('T')[0]\r\n        if (currentType == 'All') {\r\n            dispatch(sentimentBarChart(\"\", \"\", _startDate, _endDate))\r\n        } else if (currentType == 'Product') {\r\n            dispatch(sentimentBarChart('', currentProductId, _startDate, _endDate))\r\n        } else if(currentType==\"Category\") dispatch(sentimentBarChart(currentCategory, \"\", _startDate, _endDate))\r\n\r\n\r\n    }\r\n    const handleChangeStartDate = (date) => {\r\n        setStartDate(date)\r\n         reloadChart()\r\n    };\r\n    const handleChangeEndDate = (date) => {\r\n        setEndDate(date)\r\n         reloadChart()\r\n    };\r\n\r\n\r\n    //reaload chart data\r\n    useEffect(() => {\r\n        // console.log(\"Dddddddddddddddddđ\")\r\n        // let arr = sentiments.filter((sentiment) => {\r\n        //         return sentiment.rating==1\r\n        // }).map((sentiment) => {\r\n        //     return sentiment.total\r\n        // })\r\n        // console.log(\"Arrrrrrrrr: \", arr)\r\n\r\n        setSentimentCircleChartData({\r\n\r\n            series: [{\r\n                name: '1 star',\r\n                data: sentiments.filter((sentiment) => {\r\n                    return sentiment.rating === 1\r\n                }).map((sentiment) => {\r\n                    return sentiment.total\r\n                })\r\n            }, {\r\n                name: '2 star',\r\n                 data: sentiments.filter((sentiment) => {\r\n                    return sentiment.rating === 2\r\n                }).map((sentiment) => {\r\n                    return sentiment.total\r\n                })\r\n            }, {\r\n                name: '3 star',\r\n                 data: sentiments.filter((sentiment) => {\r\n                    return sentiment.rating === 3\r\n                }).map((sentiment) => {\r\n                    return sentiment.total\r\n                })\r\n            }, {\r\n                name: '4 star',\r\n                data: sentiments.filter((sentiment) => {\r\n                    return sentiment.rating === 4\r\n                }).map((sentiment) => {\r\n                    return sentiment.total\r\n                })\r\n            }, {\r\n                name: '5 star',\r\n                 data: sentiments.filter((sentiment) => {\r\n                    return sentiment.rating === 5\r\n                }).map((sentiment) => {\r\n                    return sentiment.total\r\n                })\r\n            }],\r\n            options: {\r\n                chart: {\r\n                    type: 'bar',\r\n\r\n                    stacked: true,\r\n                    stackType: '100%'\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: true,\r\n                    },\r\n                },\r\n                stroke: {\r\n                    width: 1,\r\n                    colors: ['#fff']\r\n                },\r\n\r\n                xaxis: {\r\n                    categories: [\"Negative\",\"Neutral\" ,\"Positive\"],\r\n                },\r\n                tooltip: {\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return val + \" comments\"\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                colors:[ '#ff6384', '#ff9f40', '#ffcd56', '#4bc0c0', '#36a2eb'],\r\n                legend: {\r\n                    position: 'top',\r\n                    horizontalAlign: 'left',\r\n                    offsetX: 40\r\n                }\r\n            },\r\n        });\r\n    }, [sentimentBar]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {loadingProductIdName\r\n                ? (<Loader/>)\r\n                : errorProductIdName\r\n                    ? (<Message variant='danger'>{errorProductIdName}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <div className='row'>\r\n                                <div className='col-sm-6  col-lg-6 mb-4'>\r\n                                    <span>Type</span>\r\n                                    <Select options={[\r\n                                        {value: 'All', label: 'All'},\r\n                                        {value: 'Category', label: 'Category'},\r\n                                        {value: 'Product', label: 'Product'}\r\n                                    ]} onChange={handleChangeType}/>\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n\r\n                                    {currentType == 'Product' ? (\r\n                                            <>\r\n                                                <span>{currentType}</span>\r\n                                                <Select options={selectOptions} onChange={handleChangeProductId}/>\r\n                                            </>\r\n                                        )\r\n                                        : currentType == 'Category' ? (\r\n                                                <>\r\n                                                    <span>{currentType}</span>\r\n                                                    <Select options={selectOptions} onChange={handleChangeCategory}/>\r\n                                                </>\r\n                                            )\r\n                                            : (\r\n                                                <div className='d-none'></div>\r\n                                            )\r\n\r\n                                    }\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>From date</span>\r\n                                    <DatePicker locale=\"us\" selected={startDate} onChange={handleChangeStartDate}/>\r\n                                </div>\r\n                                <div className='col-sm-6 col-lg-6 mb-4'>\r\n                                    <span>To date</span>\r\n                                    <DatePicker locale=\"us\" selected={endDate} onChange={handleChangeEndDate}/>\r\n                                </div>\r\n                                {/*<div className='col-sm-6 col-lg-6 mb-4'>*/}\r\n                                {/*    <button className='btn btn-primary' onClick={handleLoadChart}>Load Chart</button>*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                            {sentimentCircleChartData.series == undefined ? (<Loader/>) :\r\n                                sentimentCircleChartData.series.length != 0 ? (\r\n                                    <Chart options={sentimentCircleChartData.options}\r\n                                           series={sentimentCircleChartData.series} type=\"bar\" height={350}\r\n                                    />\r\n                                ) : (\r\n                                    <>\r\n                                    </>\r\n\r\n                                )}\r\n                        </div>\r\n                    )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default HorizontalBarChart;","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\SearchBox.js",["463","464"],"import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory  } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/search/name/${keyword}`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        // <Form onSubmit={submitHandler} inline>\r\n        //     <Form.Control\r\n        //         type='text'\r\n        //         name='q'\r\n        //         onChange={(e) => setKeyword(e.target.value)}\r\n        //         className='mr-sm-2 ml-sm-5'\r\n        //     ></Form.Control>\r\n        //\r\n        //     {/*<Button*/}\r\n        //     {/*    type='submit'*/}\r\n        //     {/*    variant='outline-success'*/}\r\n        //     {/*    className='p-2'*/}\r\n        //     {/*>*/}\r\n        //     {/*    Submit*/}\r\n        //     {/*</Button>*/}\r\n        // </Form>\r\n        <form className=\"search\" onSubmit={submitHandler}>\r\n      {/*<div className=\"row\">*/}\r\n      {/*  <input*/}\r\n      {/*    type=\"text\"*/}\r\n      {/*    name=\"q\"*/}\r\n      {/*    id=\"q\"*/}\r\n      {/*    onChange={(e) => setKeyword(e.target.value)}*/}\r\n      {/*  ></input>*/}\r\n\r\n\r\n          <div name=\"q\" id=\"q\" className=\"md-form active-cyan active-cyan-2\" style={{\"margin\": \"0px\"}}>\r\n                                    <input className=\"form-control \" type=\"text\" placeholder=\"Search\"\r\n                                           aria-label=\"Search\"\r\n                                     onChange={(e) => setKeyword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n      {/*</div>*/}\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\Data.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Message.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Loader.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\FormContainer.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\userConstants.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\productConstants.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\userActions.js",["465"],"import axios from 'axios'\r\nimport qs from 'qs'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_FORGOT_PASSWORD_REQUEST,\r\n    USER_FORGOT_PASSWORD_SUCCESS,\r\n    USER_FORGOT_PASSWORD_FAIL,\r\n    USER_RESET_PASSWORD_REQUEST, USER_RESET_PASSWORD_SUCCESS, USER_RESET_PASSWORD_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_FORGOT_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/password_reset/',\r\n            { 'email': email},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_FORGOT_PASSWORD_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_FORGOT_PASSWORD_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPassword = (token,password) => async (dispatch) => {\r\n    console.log(\"Token: \",token,password)\r\n    try {\r\n        dispatch({\r\n            type: USER_RESET_PASSWORD_REQUEST\r\n        })\r\n\r\n        // const config = {\r\n        //     headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n        // }\r\n\r\n        const { data } = await axios({\r\n            method: 'post',\r\n            url: '/api/users/password_reset/confirm/',\r\n            data: qs.stringify({\r\n                token: token,\r\n                password: password\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            }\r\n            // '/api/users/password_reset/confirm/',\r\n            // {'token': token, 'password': password},\r\n            // config\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_RESET_PASSWORD_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_RESET_PASSWORD_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\productActions.js",["466","467","468","469","470","471","472","473","474","475","476"],"import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n\r\n    PRODUCT_RANDOM_REQUEST,\r\n    PRODUCT_RANDOM_SUCCESS,\r\n    PRODUCT_RANDOM_FAIL,\r\n    PRODUCT_CATEGORY_LIST_REQUEST,\r\n    PRODUCT_CATEGORY_LIST_SUCCESS,\r\n    PRODUCT_CATEGORY_LIST_FAIL,\r\n    PRODUCT_ALL_LIST_REQUEST,\r\n    PRODUCT_ALL_LIST_SUCCESS,\r\n    PRODUCT_ALL_LIST_FAIL,\r\n    SENTIMENT_CIRCLE_CHART_REQUEST,\r\n    SENTIMENT_CIRCLE_CHART_SUCCESS,\r\n    SENTIMENT_CIRCLE_CHART_FAIL,\r\n    PRODUCT_ID_NAME_REQUEST,\r\n    PRODUCT_ID_NAME_SUCCESS,\r\n    PRODUCT_ID_NAME_FAIL,\r\n    SENTIMENT_BAR_CHART_REQUEST,\r\n    SENTIMENT_BAR_CHART_SUCCESS,\r\n    SENTIMENT_BAR_CHART_FAIL,\r\n    SENTIMENT_LINE_CHART_REQUEST,\r\n    SENTIMENT_LINE_CHART_FAIL,\r\n    SENTIMENT_LINE_CHART_SUCCESS,\r\n    SIMILAR_WORD_CLOUD_REQUEST,\r\n    SIMILAR_WORD_CLOUD_SUCCESS,\r\n    SIMILAR_WORD_CLOUD_FAIL,\r\n    USER_BUY_PRODUCT_REQUEST,\r\n    USER_BUY_PRODUCT_SUCCESS,\r\n    USER_BUY_PRODUCT_FAIL,\r\n    REVIEW_ALL_LIST_SUCCESS,\r\n    REVIEW_ALL_LIST_FAIL,\r\n    REVIEW_ALL_LIST_REQUEST,\r\n    REVIEW_DELETE_REQUEST,\r\n    REVIEW_UPDATE_REQUEST, REVIEW_UPDATE_SUCCESS, REVIEW_UPDATE_FAIL\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts =\r\n  ({\r\n    pageNumber = '',\r\n    seller = '',\r\n    name = '',\r\n    category = '',\r\n    order = 'createdAt',\r\n    min = 0,\r\n    max = 1000000,\r\n    rating ='',\r\n  }) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_LIST_REQUEST,\r\n    });\r\n    try {\r\n      console.log(`/api/products?page=${pageNumber}&seller=${seller}&keyword=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`)\r\n      const { data } = await axios.get(\r\n        `/api/products?page=${pageNumber}&seller=${seller}&keyword=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\r\n      );\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\n\r\nexport const listAllProducts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_ALL_LIST_REQUEST })\r\n\r\n        console.log(\"Page: \",page)\r\n        const { data } = await axios.get(`/api/products/all?page=${page}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_ALL_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_ALL_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAllReviews = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: REVIEW_ALL_LIST_REQUEST })\r\n\r\n        console.log(\"Page: \",page)\r\n        const { data } = await axios.get(`/api/products/reviews?page=${page}`)\r\n\r\n        dispatch({\r\n            type: REVIEW_ALL_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REVIEW_ALL_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const productsIdName = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_ID_NAME_REQUEST })\r\n\r\n        console.log(\"Page: \",page)\r\n        const { data } = await axios.get(`/api/products/products-id-name`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_ID_NAME_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_ID_NAME_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const sentimentLineChart = (category, product_id, start_date, end_date, filter_type_date) => async (dispatch) => {\r\n    console.log('product_id: ', product_id)\r\n    try {\r\n        dispatch({ type: SENTIMENT_LINE_CHART_REQUEST })\r\n        start_date = start_date == undefined ? '2017-01-01' : start_date\r\n        filter_type_date = filter_type_date == undefined ? 'year' : filter_type_date\r\n        end_date = end_date == undefined ? new Date().toISOString().split('T')[0] : end_date\r\n        const { data } = await axios.get(`/api/products/get-sentiment-line?category=${category}&product_id=${product_id}&from_date=${start_date}&to_date=${end_date}&filter_type_date=${filter_type_date}`)\r\n\r\n        dispatch({\r\n            type: SENTIMENT_LINE_CHART_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SENTIMENT_LINE_CHART_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const sentimentCircleChart = (category, product_id, start_date, end_date) => async (dispatch) => {\r\n    console.log('product_id: ', product_id)\r\n    try {\r\n        dispatch({ type: SENTIMENT_CIRCLE_CHART_REQUEST })\r\n        start_date = start_date == undefined ? '2017-01-01' : start_date\r\n        end_date = end_date == undefined ? new Date().toISOString().split('T')[0] : end_date\r\n        const { data } = await axios.get(`/api/products/get-sentiment-circle?category=${category}&product_id=${product_id}&from_date=${start_date}&to_date=${end_date}`)\r\n\r\n        dispatch({\r\n            type: SENTIMENT_CIRCLE_CHART_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SENTIMENT_CIRCLE_CHART_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const similarWordCloud = (number, expression) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: SIMILAR_WORD_CLOUD_REQUEST })\r\n        number = number == undefined ? 10:number\r\n        expression = expression == undefined ? 'phone' : expression\r\n        const { data } = await axios.get(`/api/products/get-word-cloud?expression=${expression}&number=${number}`)\r\n\r\n        dispatch({\r\n            type: SIMILAR_WORD_CLOUD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SIMILAR_WORD_CLOUD_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const userBuyProduct = (user_id, product_id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: USER_BUY_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/orders/user-buy-product?user_id=${user_id}&product_id=${product_id}`)\r\n\r\n        dispatch({\r\n            type: USER_BUY_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_BUY_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const sentimentBarChart = (category, product_id, start_date, end_date) => async (dispatch) => {\r\n    console.log('product_id: ', product_id)\r\n    try {\r\n        dispatch({ type: SENTIMENT_BAR_CHART_REQUEST })\r\n        start_date = start_date == undefined ? '2017-01-01' : start_date\r\n        end_date = end_date == undefined ? new Date().toISOString().split('T')[0] : end_date\r\n        const { data } = await axios.get(`/api/products/get-sentiment-horizontal-bar-chart?category=${category}&product_id=${product_id}&from_date=${start_date}&to_date=${end_date}`)\r\n\r\n        dispatch({\r\n            type: SENTIMENT_BAR_CHART_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SENTIMENT_BAR_CHART_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductCategories = () => async (dispatch) => {\r\n  dispatch({\r\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(`/api/products/categories`);\r\n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\nexport const listRandomProducts = (count) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_RANDOM_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/random-products?num-product=${count}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_RANDOM_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_RANDOM_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateReview = (review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REVIEW_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update-sentiment-review/${review._id}/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: REVIEW_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REVIEW_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\orderActions.js",["477","478","479"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\utils.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Product.js",["480"],"import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport {domain} from \"../env\";\r\n\r\nfunction Product({ product }) {\r\n\r\n    if(!product.image.includes('http')) {\r\n        console.log('here');\r\n        product.image = domain+product.image\r\n    }else{\r\n        product.image = product.image.replace(\"/images/https%3A/\",\"https://\")\r\n    }\r\n\r\n    return (\r\n        // <Card className=\"my-3 p-3 rounded\">\r\n        //     <Link to={`/product/${product._id}`}>\r\n        //         <Card.Img src={product.image} />\r\n        //     </Link>\r\n        //\r\n        //     <Card.Body>\r\n        //         <Link to={`/product/${product._id}`}>\r\n        //             <Card.Title as=\"div\">\r\n        //                 <strong>{product.name}</strong>\r\n        //             </Card.Title>\r\n        //         </Link>\r\n        //\r\n        //         <Card.Text as=\"div\">\r\n        //             <div className=\"my-3\">\r\n        //                 <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n        //             </div>\r\n        //         </Card.Text>\r\n        //\r\n        //\r\n        //         <Card.Text as=\"h3\">\r\n        //             ${product.price}\r\n        //         </Card.Text>\r\n        //     </Card.Body>\r\n        // </Card>\r\n        <div className=\"card card-ecommerce\">\r\n\r\n\r\n            <div className=\"view overlay\">\r\n\r\n                <img src={product.image}\r\n                     className=\"img-fluid\"\r\n                     alt=\"\" style={{margin: \"10px 32% 0 32%\",width: \"120px\",height: \"250px\"}}/>\r\n\r\n\r\n                <Link to={`/product/${product._id}`}>\r\n\r\n                    <div className=\"mask rgba-white-slight\"></div>\r\n\r\n                </Link>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"card-body\">\r\n\r\n\r\n                <h5 className=\"card-title mb-1\"><strong><Link to={`/product/${product._id}`} className=\"dark-grey-text\">{product.name}</Link></strong>\r\n                </h5>\r\n                <span className=\"badge badge-danger mb-2\">bestseller</span>\r\n\r\n\r\n                <ul className=\"rating\">\r\n\r\n                    {/*<li><i className=\"fas fa-star blue-text\"></i></li>*/}\r\n\r\n                    {/*<li><i className=\"fas fa-star blue-text\"></i></li>*/}\r\n\r\n                    {/*<li><i className=\"fas fa-star blue-text\"></i></li>*/}\r\n\r\n                    {/*<li><i className=\"fas fa-star blue-text\"></i></li>*/}\r\n\r\n                    {/*<li><i className=\"fas fa-star blue-text\"></i></li>*/}\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n\r\n                </ul>\r\n\r\n\r\n                <div className=\"card-footer pb-0\">\r\n\r\n                    <div className=\"row mb-0\">\r\n\r\n                        <span className=\"float-left\"><strong>${product.price}</strong></span>\r\n\r\n                        {/*<span className=\"float-right\">*/}\r\n\r\n                        {/*<a className=\"\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Add to Cart\"><i*/}\r\n                        {/*    className=\"fas fa-shopping-cart ml-3\"></i></a>*/}\r\n\r\n                      {/*</span>*/}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Rating.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\env.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\Paginate.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\actions\\cartActions.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\School\\GE\\Web_site\\Phone_ecommerce\\PhoneShop\\frontend\\src\\screens\\ReviewListScreen.js",["481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503"],"import React, {useState, useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct,\r\n    listAllProducts,\r\n    listAllReviews,\r\n    updateReview\r\n} from '../actions/productActions'\r\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\r\nimport {Link, useLocation, useParams} from \"react-router-dom\";\r\n\r\nfunction ReviewListScreen({history, match}) {\r\n    const {\r\n        pageNum = 1\r\n    } = useParams();\r\n    const dispatch = useDispatch()\r\n\r\n    console.log(pageNum)\r\n    useEffect(() => {\r\n        console.log(\"Product List Screen: \", pageNum)\r\n        dispatch(\r\n            listAllReviews(pageNum)\r\n        );\r\n    }, [dispatch, pageNum]);\r\n    // const productList = useSelector(state => state.productList)\r\n    // const { loading, error, products, pages, page } = productList\r\n\r\n    // console.log('ProductListScreen: ', productAllList)\r\n\r\n    const reviewAllList = useSelector(state => state.reviewAllList)\r\n    const {loading, error, reviews, pages, page} = reviewAllList\r\n\r\n\r\n    // const reviewDelete = useSelector(state => state.productDelete)\r\n    // const {loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\r\n\r\n     const reviewUpdate = useSelector(state => state.reviewUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = reviewUpdate\r\n\r\n\r\n    // const productCreate = useSelector(state => state.productCreate)\r\n    // const {loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    let keyword = history.location.search\r\n    // useEffect(() => {\r\n    //     dispatch({type: PRODUCT_CREATE_RESET})\r\n    //\r\n    //     if (!userInfo.isAdmin) {\r\n    //         history.push('/login')\r\n    //     }\r\n    //\r\n    //     if (successCreate) {\r\n    //         history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    //     } else {\r\n    //         dispatch(listAllProducts())\r\n    //     }\r\n    //\r\n    // }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n    const sentimentHandler = (id,sentiment) => {\r\n\r\n        if (window.confirm(`Are you sure you want to change sentiment this comment?`)) {\r\n            dispatch(updateReview({\r\n            _id: id,\r\n            hide:'None',\r\n                sentiment:sentiment\r\n        }))\r\n            dispatch(listAllReviews(pageNum))\r\n        }\r\n    }\r\nconst hideHandler = (id,hide, description) => {\r\n\r\n        if (window.confirm(`Are you sure you want to ${description} this comment?`)) {\r\n            dispatch(updateReview({\r\n            _id: id,\r\n            hide:hide,\r\n                sentiment:'None'\r\n        }))\r\n            dispatch(listAllReviews(pageNum))\r\n        }\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this comment?')) {\r\n            dispatch(updateReview({\r\n            _id: id,\r\n            hide:2,\r\n                sentiment:'None'\r\n        }))\r\n            dispatch(listAllReviews(pageNum))\r\n        }\r\n    }\r\n\r\n    // const createProductHandler = () => {\r\n    //     dispatch(createProduct())\r\n    // }\r\n    const range = (start, end, total_pages) => {\r\n\r\n        let output = [];\r\n        if (typeof end === 'undefined') {\r\n            end = start;\r\n            start = 0;\r\n        }\r\n        console.log(\"start: \", start, end, total_pages)\r\n        for (let i = start; i <= end; i += 1) {\r\n            if (i < 1) continue;\r\n            if (i > total_pages) break;\r\n            console.log('i: ', i)\r\n            output.push(i);\r\n        }\r\n        console.log(\"output: \", output)\r\n        return output;\r\n    };\r\n    return (\r\n        // <div>\r\n        //     <Row className='align-items-center'>\r\n        //         <Col>\r\n        //             <h1>Products</h1>\r\n        //         </Col>\r\n        //\r\n        //         <Col className='text-right'>\r\n        //             <Button className='my-3' onClick={createProductHandler}>\r\n        //                 <i className='fas fa-plus'></i> Create Product\r\n        //             </Button>\r\n        //         </Col>\r\n        //     </Row>\r\n        //\r\n        //     {loadingDelete && <Loader />}\r\n        //     {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        //\r\n        //\r\n        //     {loadingCreate && <Loader />}\r\n        //     {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        //\r\n        //     {loading\r\n        //         ? (<Loader />)\r\n        //         : error\r\n        //             ? (<Message variant='danger'>{error}</Message>)\r\n        //             : (\r\n        //                 <div>\r\n        //                     <Table striped bordered hover responsive className='table-sm'>\r\n        //                         <thead>\r\n        //                             <tr>\r\n        //                                 <th>ID</th>\r\n        //                                 <th>NAME</th>\r\n        //                                 <th>PRICE</th>\r\n        //                                 <th>CATEGORY</th>\r\n        //                                 <th>BRAND</th>\r\n        //                                 <th></th>\r\n        //                             </tr>\r\n        //                         </thead>\r\n        //\r\n        //                         <tbody>\r\n        //                             {products.map(product => (\r\n        //                                 <tr key={product._id}>\r\n        //                                     <td>{product._id}</td>\r\n        //                                     <td>{product.name}</td>\r\n        //                                     <td>${product.price}</td>\r\n        //                                     <td>{product.category}</td>\r\n        //                                     <td>{product.brand}</td>\r\n        //\r\n        //                                     <td>\r\n        //                                         <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n        //                                             <Button variant='light' className='btn-sm'>\r\n        //                                                 <i className='fas fa-edit'></i>\r\n        //                                             </Button>\r\n        //                                         </LinkContainer>\r\n        //\r\n        //                                         <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n        //                                             <i className='fas fa-trash'></i>\r\n        //                                         </Button>\r\n        //                                     </td>\r\n        //                                 </tr>\r\n        //                             ))}\r\n        //                         </tbody>\r\n        //                     </Table>\r\n        //                      <div className=\"row justify-content-center mb-4\">\r\n        //\r\n        //\r\n        //       <nav className=\"mb-4\">\r\n        //\r\n        //         <ul className=\"pagination pagination-circle pg-blue mb-0\">\r\n        //\r\n        //           <li className=\"page-item\">\r\n        //\r\n        //             <Link\r\n        //             className=\"page-link waves-effect waves-effect\"\r\n        //\r\n        //             to={`/admin/productlist/page/${page==1?1:page-1}`}\r\n        //           >\r\n        //\r\n        //             <span aria-hidden=\"true\">«</span>\r\n        //               <span className=\"sr-only\">Previous</span>\r\n        //\r\n        //           </Link>\r\n        //\r\n        //           </li>\r\n        //\r\n        //             {\r\n        //                 range(page-3,page+3,pages).map((x) => (\r\n        //                   <li className={`page-item ${x === page ? 'active' : ''}`} >\r\n        //               <Link\r\n        //                 className=\"page-link waves-effect waves-effect\"\r\n        //                 key={x}\r\n        //                  to={`/admin/productlist/page/${x}`}\r\n        //               >\r\n        //                 {x}\r\n        //           </Link>\r\n        //                 </li>\r\n        //         ))}\r\n        //\r\n        //\r\n        //           <li className=\"page-item\">\r\n        //\r\n        //\r\n        //              <Link\r\n        //             className=\"page-link waves-effect waves-effect\"\r\n        //\r\n        //              to={`/admin/productlist/page/${page>=pages?pages:page+1}`}\r\n        //           >\r\n        //\r\n        //             <span aria-hidden=\"true\">»</span>\r\n        //               <span className=\"sr-only\">Next</span>\r\n        //\r\n        //           </Link>\r\n        //\r\n        //           </li>\r\n        //\r\n        //\r\n        //\r\n        //\r\n        //         </ul>\r\n        //\r\n        //       </nav>\r\n        //\r\n        //\r\n        //     </div>\r\n        //                 </div>\r\n        //             )}\r\n        // </div>\r\n\r\n\r\n        //Break\r\n\r\n\r\n        <div className=\"container-for-admin\">\r\n\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 col-md-3 \">\r\n\r\n\r\n                        <div className=\"list-group list-group-flush card mb-4 wow fadeIn \">\r\n                            <h4 className=\"list-group-item list-group-item-action waves-effect\" style={{background:'rgba(0,0,0,.05)', textAlign:'center'}}>\r\n                                <span >Admin</span>\r\n                            </h4>\r\n                            <Link to={`/admin/dashboard`} className=\"list-group-item list-group-item-action waves-effect\">\r\n                                <i className=\"fa fa-chart-line mr-3\"></i>Dashboard\r\n                            </Link>\r\n                            <Link to={`/admin/productlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('productlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Product</Link>\r\n                            <Link to={`/admin/userlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('userlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-user mr-3\"></i>User</Link>\r\n                            <Link to={`/admin/orderlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('orderlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-shopping-cart mr-3\"></i>Order</Link>\r\n                            <Link to={`/admin/reviewlist`} className=\"list-group-item list-group-item-action waves-effect\" style={useLocation().pathname.includes('reviewlist')?{color:'#2196f3',fontWeight: 'bold'}:{}}>\r\n                                <i className=\"fa fa-box mr-3\"></i>Review</Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <div className=\"card mb-4 wow fadeIn\">\r\n                            <div className=\"card-body d-sm-flex justify-content-between\" style={{padding:'5px'}} >\r\n\r\n                                <h3 className=\"pt-3 pl-3\">\r\n                                    Review list\r\n                                </h3>\r\n                                {/*<Col className='d-flex justify-content-end'>*/}\r\n                                {/*    <Button >*/}\r\n                                {/*        <i className='fas fa-plus'></i> Create Product*/}\r\n                                {/*    </Button>*/}\r\n                                {/*</Col>*/}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*Product list*/}\r\n\r\n                        <div>\r\n\r\n\r\n                            {loadingUpdate && <Loader/>}\r\n                            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n\r\n                            {/*{loadingCreate && <Loader/>}*/}\r\n                            {/*{errorCreate && <Message variant='danger'>{errorCreate}</Message>}*/}\r\n\r\n                            {loading\r\n                                ? (<Loader/>)\r\n                                : error\r\n                                    ? (<Message variant='danger'>{error}</Message>)\r\n                                    : (\r\n                                        <div>\r\n                                            <Table striped bordered hover responsive className='table-sm'>\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>USER</th>\r\n                                                    <th>PRODUCT</th>\r\n                                                    <th>RATING</th>\r\n                                                    <th>COMMENT</th>\r\n                                                    <th>SENTIMENT</th>\r\n                                                    <th>Relabel</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                </thead>\r\n\r\n                                                <tbody>\r\n                                                {reviews.map(review => (\r\n                                                    <tr key={review._id}>\r\n                                                        <td>{review._id}</td>\r\n                                                        <td>{review.name}</td>\r\n                                                        <td>{review.product_name}</td>\r\n                                                        <td>{review.rating}</td>\r\n                                                        <td>{review.comment}</td>\r\n                                                        <td>\r\n                                                            {review.sentiment==0?'Negative':review.sentiment==1?'Neutral':'Positive'}\r\n                                                        </td>\r\n\r\n                                                        <td>\r\n\r\n                                                            <Button disabled={review.sentiment==0?true:false} variant={review.sentiment==0?\"danger\":\"muted\"} className='btn-sm'\r\n                                                                    onClick={() => sentimentHandler(review._id, 0)}>\r\n                                                               Negative\r\n\r\n                                                            </Button>\r\n                                                            <Button disabled={review.sentiment==1?true:false} variant={review.sentiment==1?\"warning\":\"muted\"} className='btn-sm'\r\n                                                                    onClick={() => sentimentHandler(review._id, 1)}>\r\n                                                               Neutral\r\n\r\n                                                            </Button>\r\n\r\n                                                                <Button disabled={review.sentiment==2?true:false} variant={review.sentiment==2?\"primary\":\"muted\"} className='btn-sm'\r\n                                                                    onClick={() => sentimentHandler(review._id, 2)}>\r\n                                                               Positive\r\n\r\n                                                            </Button>\r\n\r\n                                                        </td>\r\n\r\n\r\n\r\n                                                        <td>\r\n                                                             {review.hide==-1?\r\n                                                                (<Button variant='warning' className='btn-sm' data-toggle=\"tooltip\" data-placement=\"top\" title=\"Show\"\r\n                                                                    onClick={() => hideHandler(review._id, 1, 'hide')}>\r\n                                                                <i className='fas fa-eye'></i>\r\n\r\n                                                            </Button>):\r\n                                                                (<Button variant='muted' className='btn-sm' data-toggle=\"tooltip\" data-placement=\"top\" title=\"Hide\"\r\n                                                                    onClick={() => hideHandler(review._id, -1,'show')}>\r\n                                                                <i className='fas fa-eye-slash'></i>\r\n\r\n                                                            </Button>)}\r\n                                                            <Button variant='danger' className='btn-sm'\r\n                                                                    onClick={() => deleteHandler(review._id)}>\r\n                                                                <i className='fas fa-trash'></i>\r\n                                                            </Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                            <div className=\"row justify-content-center mb-4\">\r\n\r\n\r\n                                                <nav className=\"mb-4\">\r\n\r\n                                                    <ul className=\"pagination pagination-circle pg-blue mb-0\">\r\n\r\n                                                        <li className=\"page-item\">\r\n\r\n                                                            <Link\r\n                                                                className=\"page-link waves-effect waves-effect\"\r\n\r\n                                                                to={`/admin/reviewlist/page/${page == 1 ? 1 : page - 1}`}\r\n                                                            >\r\n\r\n                                                                <span aria-hidden=\"true\">«</span>\r\n                                                                <span className=\"sr-only\">Previous</span>\r\n\r\n                                                            </Link>\r\n\r\n                                                        </li>\r\n\r\n                                                        {\r\n                                                            range(page - 3, page + 3, pages).map((x) => (\r\n                                                                <li className={`page-item ${x === page ? 'active' : ''}`}>\r\n                                                                    <Link\r\n                                                                        className=\"page-link waves-effect waves-effect\"\r\n                                                                        key={x}\r\n                                                                        to={`/admin/reviewlist/page/${x}`}\r\n                                                                    >\r\n                                                                        {x}\r\n                                                                    </Link>\r\n                                                                </li>\r\n                                                            ))}\r\n\r\n\r\n                                                        <li className=\"page-item\">\r\n\r\n\r\n                                                            <Link\r\n                                                                className=\"page-link waves-effect waves-effect\"\r\n\r\n                                                                to={`/admin/reviewlist/page/${page >= pages ? pages : page + 1}`}\r\n                                                            >\r\n\r\n                                                                <span aria-hidden=\"true\">»</span>\r\n                                                                <span className=\"sr-only\">Next</span>\r\n\r\n                                                            </Link>\r\n\r\n                                                        </li>\r\n\r\n\r\n                                                    </ul>\r\n\r\n                                                </nav>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                        </div>\r\n\r\n                        {/*    Product list*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewListScreen",{"ruleId":"504","replacedBy":"505"},{"ruleId":"506","replacedBy":"507"},{"ruleId":"508","severity":1,"message":"509","line":107,"column":7,"nodeType":"510","messageId":"511","endLine":107,"endColumn":13},{"ruleId":"508","severity":1,"message":"512","line":1,"column":10,"nodeType":"510","messageId":"511","endLine":1,"endColumn":19},{"ruleId":"508","severity":1,"message":"513","line":22,"column":8,"nodeType":"510","messageId":"511","endLine":22,"endColumn":16},{"ruleId":"508","severity":1,"message":"514","line":23,"column":8,"nodeType":"510","messageId":"511","endLine":23,"endColumn":21},{"ruleId":"508","severity":1,"message":"515","line":24,"column":8,"nodeType":"510","messageId":"511","endLine":24,"endColumn":26},{"ruleId":"508","severity":1,"message":"516","line":25,"column":8,"nodeType":"510","messageId":"511","endLine":25,"endColumn":17},{"ruleId":"508","severity":1,"message":"517","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":15},{"ruleId":"508","severity":1,"message":"518","line":3,"column":17,"nodeType":"510","messageId":"511","endLine":3,"endColumn":20},{"ruleId":"508","severity":1,"message":"512","line":3,"column":22,"nodeType":"510","messageId":"511","endLine":3,"endColumn":31},{"ruleId":"508","severity":1,"message":"519","line":3,"column":33,"nodeType":"510","messageId":"511","endLine":3,"endColumn":36},{"ruleId":"508","severity":1,"message":"520","line":3,"column":38,"nodeType":"510","messageId":"511","endLine":3,"endColumn":49},{"ruleId":"508","severity":1,"message":"521","line":4,"column":9,"nodeType":"510","messageId":"511","endLine":4,"endColumn":22},{"ruleId":"522","severity":1,"message":"523","line":88,"column":25,"nodeType":"524","endLine":88,"endColumn":79},{"ruleId":"522","severity":1,"message":"525","line":169,"column":45,"nodeType":"524","endLine":171,"endColumn":114},{"ruleId":"508","severity":1,"message":"526","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":17},{"ruleId":"508","severity":1,"message":"527","line":4,"column":9,"nodeType":"510","messageId":"511","endLine":4,"endColumn":17},{"ruleId":"508","severity":1,"message":"528","line":5,"column":18,"nodeType":"510","messageId":"511","endLine":5,"endColumn":25},{"ruleId":"508","severity":1,"message":"529","line":6,"column":9,"nodeType":"510","messageId":"511","endLine":6,"endColumn":24},{"ruleId":"508","severity":1,"message":"530","line":8,"column":9,"nodeType":"510","messageId":"511","endLine":8,"endColumn":33},{"ruleId":"508","severity":1,"message":"531","line":8,"column":35,"nodeType":"510","messageId":"511","endLine":8,"endColumn":60},{"ruleId":"508","severity":1,"message":"532","line":16,"column":25,"nodeType":"510","messageId":"511","endLine":16,"endColumn":41},{"ruleId":"508","severity":1,"message":"533","line":46,"column":21,"nodeType":"510","messageId":"511","endLine":46,"endColumn":36},{"ruleId":"508","severity":1,"message":"534","line":46,"column":45,"nodeType":"510","messageId":"511","endLine":46,"endColumn":58},{"ruleId":"508","severity":1,"message":"535","line":50,"column":18,"nodeType":"510","messageId":"511","endLine":50,"endColumn":40},{"ruleId":"508","severity":1,"message":"536","line":50,"column":49,"nodeType":"510","messageId":"511","endLine":50,"endColumn":69},{"ruleId":"537","severity":1,"message":"538","line":74,"column":18,"nodeType":"539","messageId":"540","endLine":74,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":78,"column":25,"nodeType":"539","messageId":"540","endLine":78,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":82,"column":22,"nodeType":"539","messageId":"540","endLine":82,"endColumn":24},{"ruleId":"537","severity":1,"message":"538","line":102,"column":25,"nodeType":"539","messageId":"540","endLine":102,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":104,"column":32,"nodeType":"539","messageId":"540","endLine":104,"endColumn":34},{"ruleId":"541","severity":1,"message":"542","line":122,"column":34,"nodeType":"543","messageId":"544","endLine":122,"endColumn":36},{"ruleId":"537","severity":1,"message":"538","line":123,"column":37,"nodeType":"539","messageId":"540","endLine":123,"endColumn":39},{"ruleId":"537","severity":1,"message":"538","line":124,"column":42,"nodeType":"539","messageId":"540","endLine":124,"endColumn":44},{"ruleId":"545","severity":1,"message":"546","line":140,"column":8,"nodeType":"547","endLine":140,"endColumn":25,"suggestions":"548"},{"ruleId":"537","severity":1,"message":"538","line":162,"column":50,"nodeType":"539","messageId":"540","endLine":162,"endColumn":52},{"ruleId":"537","severity":1,"message":"538","line":168,"column":55,"nodeType":"539","messageId":"540","endLine":168,"endColumn":57},{"ruleId":"537","severity":1,"message":"538","line":192,"column":62,"nodeType":"539","messageId":"540","endLine":192,"endColumn":64},{"ruleId":"537","severity":1,"message":"549","line":193,"column":72,"nodeType":"539","messageId":"540","endLine":193,"endColumn":74},{"ruleId":"508","severity":1,"message":"512","line":2,"column":9,"nodeType":"510","messageId":"511","endLine":2,"endColumn":18},{"ruleId":"508","severity":1,"message":"519","line":2,"column":20,"nodeType":"510","messageId":"511","endLine":2,"endColumn":23},{"ruleId":"508","severity":1,"message":"550","line":2,"column":25,"nodeType":"510","messageId":"511","endLine":2,"endColumn":28},{"ruleId":"522","severity":1,"message":"525","line":26,"column":29,"nodeType":"524","endLine":26,"endColumn":60},{"ruleId":"522","severity":1,"message":"525","line":29,"column":29,"nodeType":"524","endLine":29,"endColumn":55},{"ruleId":"522","severity":1,"message":"525","line":32,"column":29,"nodeType":"524","endLine":32,"endColumn":58},{"ruleId":"522","severity":1,"message":"525","line":35,"column":29,"nodeType":"524","endLine":35,"endColumn":55},{"ruleId":"522","severity":1,"message":"525","line":38,"column":29,"nodeType":"524","endLine":38,"endColumn":56},{"ruleId":"508","severity":1,"message":"528","line":5,"column":18,"nodeType":"510","messageId":"511","endLine":5,"endColumn":25},{"ruleId":"508","severity":1,"message":"551","line":10,"column":22,"nodeType":"510","messageId":"511","endLine":10,"endColumn":33},{"ruleId":"508","severity":1,"message":"526","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":17},{"ruleId":"508","severity":1,"message":"527","line":4,"column":9,"nodeType":"510","messageId":"511","endLine":4,"endColumn":17},{"ruleId":"508","severity":1,"message":"528","line":5,"column":18,"nodeType":"510","messageId":"511","endLine":5,"endColumn":25},{"ruleId":"508","severity":1,"message":"529","line":7,"column":5,"nodeType":"510","messageId":"511","endLine":7,"endColumn":20},{"ruleId":"508","severity":1,"message":"552","line":8,"column":5,"nodeType":"510","messageId":"511","endLine":8,"endColumn":26},{"ruleId":"508","severity":1,"message":"553","line":9,"column":5,"nodeType":"510","messageId":"511","endLine":9,"endColumn":19},{"ruleId":"508","severity":1,"message":"554","line":10,"column":5,"nodeType":"510","messageId":"511","endLine":10,"endColumn":25},{"ruleId":"508","severity":1,"message":"530","line":14,"column":9,"nodeType":"510","messageId":"511","endLine":14,"endColumn":33},{"ruleId":"508","severity":1,"message":"531","line":14,"column":35,"nodeType":"510","messageId":"511","endLine":14,"endColumn":60},{"ruleId":"508","severity":1,"message":"555","line":17,"column":8,"nodeType":"510","messageId":"511","endLine":17,"endColumn":14},{"ruleId":"508","severity":1,"message":"556","line":18,"column":8,"nodeType":"510","messageId":"511","endLine":18,"endColumn":18},{"ruleId":"508","severity":1,"message":"557","line":20,"column":8,"nodeType":"510","messageId":"511","endLine":20,"endColumn":13},{"ruleId":"508","severity":1,"message":"532","line":22,"column":25,"nodeType":"510","messageId":"511","endLine":22,"endColumn":41},{"ruleId":"508","severity":1,"message":"558","line":71,"column":11,"nodeType":"510","messageId":"511","endLine":71,"endColumn":15},{"ruleId":"508","severity":1,"message":"559","line":1,"column":17,"nodeType":"510","messageId":"511","endLine":1,"endColumn":25},{"ruleId":"508","severity":1,"message":"519","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":12},{"ruleId":"508","severity":1,"message":"560","line":3,"column":19,"nodeType":"510","messageId":"511","endLine":3,"endColumn":27},{"ruleId":"508","severity":1,"message":"561","line":3,"column":29,"nodeType":"510","messageId":"511","endLine":3,"endColumn":34},{"ruleId":"508","severity":1,"message":"562","line":7,"column":8,"nodeType":"510","messageId":"511","endLine":7,"endColumn":16},{"ruleId":"508","severity":1,"message":"563","line":8,"column":8,"nodeType":"510","messageId":"511","endLine":8,"endColumn":23},{"ruleId":"508","severity":1,"message":"564","line":9,"column":32,"nodeType":"510","messageId":"511","endLine":9,"endColumn":44},{"ruleId":"508","severity":1,"message":"565","line":9,"column":66,"nodeType":"510","messageId":"511","endLine":9,"endColumn":81},{"ruleId":"508","severity":1,"message":"566","line":26,"column":13,"nodeType":"510","messageId":"511","endLine":26,"endColumn":18},{"ruleId":"508","severity":1,"message":"567","line":26,"column":20,"nodeType":"510","messageId":"511","endLine":26,"endColumn":27},{"ruleId":"508","severity":1,"message":"568","line":34,"column":9,"nodeType":"510","messageId":"511","endLine":34,"endColumn":16},{"ruleId":"541","severity":1,"message":"542","line":52,"column":26,"nodeType":"543","messageId":"544","endLine":52,"endColumn":28},{"ruleId":"569","severity":1,"message":"570","line":166,"column":17,"nodeType":"524","endLine":166,"endColumn":171},{"ruleId":"569","severity":1,"message":"570","line":274,"column":17,"nodeType":"524","endLine":275,"endColumn":39},{"ruleId":"522","severity":1,"message":"525","line":283,"column":23,"nodeType":"524","endLine":283,"endColumn":26},{"ruleId":"522","severity":1,"message":"525","line":300,"column":23,"nodeType":"524","endLine":300,"endColumn":101},{"ruleId":"569","severity":1,"message":"570","line":324,"column":17,"nodeType":"524","endLine":324,"endColumn":121},{"ruleId":"522","severity":1,"message":"525","line":332,"column":23,"nodeType":"524","endLine":332,"endColumn":26},{"ruleId":"522","severity":1,"message":"525","line":338,"column":23,"nodeType":"524","endLine":338,"endColumn":102},{"ruleId":"569","severity":1,"message":"570","line":356,"column":17,"nodeType":"524","endLine":356,"endColumn":121},{"ruleId":"522","severity":1,"message":"525","line":364,"column":23,"nodeType":"524","endLine":364,"endColumn":26},{"ruleId":"522","severity":1,"message":"525","line":370,"column":23,"nodeType":"524","endLine":370,"endColumn":66},{"ruleId":"571","severity":1,"message":"572","line":408,"column":10,"nodeType":"524","endLine":409,"endColumn":41},{"ruleId":"522","severity":1,"message":"525","line":417,"column":9,"nodeType":"524","endLine":417,"endColumn":29},{"ruleId":"571","severity":1,"message":"572","line":451,"column":10,"nodeType":"524","endLine":452,"endColumn":41},{"ruleId":"522","severity":1,"message":"525","line":460,"column":9,"nodeType":"524","endLine":460,"endColumn":29},{"ruleId":"571","severity":1,"message":"572","line":494,"column":10,"nodeType":"524","endLine":495,"endColumn":41},{"ruleId":"522","severity":1,"message":"525","line":503,"column":9,"nodeType":"524","endLine":503,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":33,"column":28,"nodeType":"543","messageId":"544","endLine":33,"endColumn":30},{"ruleId":"508","severity":1,"message":"573","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":13},{"ruleId":"508","severity":1,"message":"574","line":4,"column":45,"nodeType":"510","messageId":"511","endLine":4,"endColumn":49},{"ruleId":"508","severity":1,"message":"575","line":26,"column":51,"nodeType":"510","messageId":"511","endLine":26,"endColumn":70},{"ruleId":"545","severity":1,"message":"576","line":54,"column":8,"nodeType":"547","endLine":54,"endColumn":37,"suggestions":"577"},{"ruleId":"537","severity":1,"message":"538","line":232,"column":110,"nodeType":"539","messageId":"540","endLine":232,"endColumn":112},{"ruleId":"537","severity":1,"message":"549","line":254,"column":76,"nodeType":"539","messageId":"540","endLine":254,"endColumn":78},{"ruleId":"537","severity":1,"message":"538","line":257,"column":84,"nodeType":"539","messageId":"540","endLine":257,"endColumn":86},{"ruleId":"537","severity":1,"message":"538","line":260,"column":84,"nodeType":"539","messageId":"540","endLine":260,"endColumn":86},{"ruleId":"537","severity":1,"message":"538","line":263,"column":84,"nodeType":"539","messageId":"540","endLine":263,"endColumn":86},{"ruleId":"537","severity":1,"message":"549","line":281,"column":71,"nodeType":"539","messageId":"540","endLine":281,"endColumn":73},{"ruleId":"537","severity":1,"message":"549","line":281,"column":103,"nodeType":"539","messageId":"540","endLine":281,"endColumn":105},{"ruleId":"537","severity":1,"message":"549","line":34,"column":22,"nodeType":"539","messageId":"540","endLine":34,"endColumn":24},{"ruleId":"508","severity":1,"message":"573","line":2,"column":10,"nodeType":"510","messageId":"511","endLine":2,"endColumn":14},{"ruleId":"537","severity":1,"message":"549","line":53,"column":22,"nodeType":"539","messageId":"540","endLine":53,"endColumn":24},{"ruleId":"508","severity":1,"message":"578","line":1,"column":27,"nodeType":"510","messageId":"511","endLine":1,"endColumn":36},{"ruleId":"508","severity":1,"message":"559","line":1,"column":17,"nodeType":"510","messageId":"511","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"579","line":36,"column":8,"nodeType":"547","endLine":36,"endColumn":26,"suggestions":"580"},{"ruleId":"541","severity":1,"message":"542","line":50,"column":39,"nodeType":"543","messageId":"544","endLine":50,"endColumn":41},{"ruleId":"545","severity":1,"message":"581","line":66,"column":8,"nodeType":"547","endLine":66,"endColumn":62,"suggestions":"582"},{"ruleId":"541","severity":1,"message":"542","line":78,"column":35,"nodeType":"543","messageId":"544","endLine":78,"endColumn":37},{"ruleId":"537","severity":1,"message":"538","line":204,"column":71,"nodeType":"539","messageId":"540","endLine":204,"endColumn":73},{"ruleId":"537","severity":1,"message":"538","line":219,"column":67,"nodeType":"539","messageId":"540","endLine":219,"endColumn":69},{"ruleId":"508","severity":1,"message":"578","line":1,"column":27,"nodeType":"510","messageId":"511","endLine":1,"endColumn":36},{"ruleId":"508","severity":1,"message":"559","line":1,"column":17,"nodeType":"510","messageId":"511","endLine":1,"endColumn":25},{"ruleId":"508","severity":1,"message":"550","line":3,"column":24,"nodeType":"510","messageId":"511","endLine":3,"endColumn":27},{"ruleId":"545","severity":1,"message":"583","line":43,"column":8,"nodeType":"547","endLine":43,"endColumn":46,"suggestions":"584"},{"ruleId":"508","severity":1,"message":"559","line":1,"column":16,"nodeType":"510","messageId":"511","endLine":1,"endColumn":24},{"ruleId":"508","severity":1,"message":"519","line":3,"column":24,"nodeType":"510","messageId":"511","endLine":3,"endColumn":27},{"ruleId":"508","severity":1,"message":"562","line":7,"column":8,"nodeType":"510","messageId":"511","endLine":7,"endColumn":16},{"ruleId":"508","severity":1,"message":"564","line":8,"column":9,"nodeType":"510","messageId":"511","endLine":8,"endColumn":21},{"ruleId":"537","severity":1,"message":"538","line":331,"column":101,"nodeType":"539","messageId":"540","endLine":331,"endColumn":103},{"ruleId":"508","severity":1,"message":"559","line":1,"column":17,"nodeType":"510","messageId":"511","endLine":1,"endColumn":25},{"ruleId":"508","severity":1,"message":"585","line":3,"column":27,"nodeType":"510","messageId":"511","endLine":3,"endColumn":37},{"ruleId":"537","severity":1,"message":"538","line":362,"column":50,"nodeType":"539","messageId":"540","endLine":362,"endColumn":52},{"ruleId":"508","severity":1,"message":"559","line":1,"column":16,"nodeType":"510","messageId":"511","endLine":1,"endColumn":24},{"ruleId":"508","severity":1,"message":"521","line":2,"column":9,"nodeType":"510","messageId":"511","endLine":2,"endColumn":22},{"ruleId":"508","severity":1,"message":"586","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":14},{"ruleId":"508","severity":1,"message":"587","line":3,"column":16,"nodeType":"510","messageId":"511","endLine":3,"endColumn":22},{"ruleId":"508","severity":1,"message":"588","line":5,"column":8,"nodeType":"510","messageId":"511","endLine":5,"endColumn":14},{"ruleId":"508","severity":1,"message":"589","line":6,"column":8,"nodeType":"510","messageId":"511","endLine":6,"endColumn":15},{"ruleId":"508","severity":1,"message":"567","line":19,"column":12,"nodeType":"510","messageId":"511","endLine":19,"endColumn":19},{"ruleId":"508","severity":1,"message":"566","line":19,"column":21,"nodeType":"510","messageId":"511","endLine":19,"endColumn":26},{"ruleId":"508","severity":1,"message":"590","line":19,"column":28,"nodeType":"510","messageId":"511","endLine":19,"endColumn":34},{"ruleId":"508","severity":1,"message":"591","line":8,"column":25,"nodeType":"510","messageId":"511","endLine":8,"endColumn":30},{"ruleId":"508","severity":1,"message":"592","line":36,"column":11,"nodeType":"510","messageId":"511","endLine":36,"endColumn":21},{"ruleId":"537","severity":1,"message":"549","line":45,"column":32,"nodeType":"539","messageId":"540","endLine":45,"endColumn":34},{"ruleId":"537","severity":1,"message":"538","line":45,"column":74,"nodeType":"539","messageId":"540","endLine":45,"endColumn":76},{"ruleId":"545","severity":1,"message":"593","line":48,"column":8,"nodeType":"547","endLine":48,"endColumn":36,"suggestions":"594"},{"ruleId":"537","severity":1,"message":"549","line":98,"column":34,"nodeType":"539","messageId":"540","endLine":98,"endColumn":36},{"ruleId":"537","severity":1,"message":"538","line":98,"column":76,"nodeType":"539","messageId":"540","endLine":98,"endColumn":78},{"ruleId":"508","severity":1,"message":"573","line":2,"column":9,"nodeType":"510","messageId":"511","endLine":2,"endColumn":13},{"ruleId":"508","severity":1,"message":"595","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":13},{"ruleId":"508","severity":1,"message":"519","line":3,"column":23,"nodeType":"510","messageId":"511","endLine":3,"endColumn":26},{"ruleId":"508","severity":1,"message":"550","line":3,"column":28,"nodeType":"510","messageId":"511","endLine":3,"endColumn":31},{"ruleId":"508","severity":1,"message":"596","line":8,"column":9,"nodeType":"510","messageId":"511","endLine":8,"endColumn":23},{"ruleId":"508","severity":1,"message":"591","line":8,"column":25,"nodeType":"510","messageId":"511","endLine":8,"endColumn":30},{"ruleId":"508","severity":1,"message":"597","line":15,"column":12,"nodeType":"510","messageId":"511","endLine":15,"endColumn":17},{"ruleId":"508","severity":1,"message":"598","line":15,"column":19,"nodeType":"510","messageId":"511","endLine":15,"endColumn":27},{"ruleId":"508","severity":1,"message":"566","line":25,"column":12,"nodeType":"510","messageId":"511","endLine":25,"endColumn":17},{"ruleId":"508","severity":1,"message":"567","line":25,"column":19,"nodeType":"510","messageId":"511","endLine":25,"endColumn":26},{"ruleId":"508","severity":1,"message":"599","line":43,"column":36,"nodeType":"510","messageId":"511","endLine":43,"endColumn":41},{"ruleId":"508","severity":1,"message":"592","line":64,"column":11,"nodeType":"510","messageId":"511","endLine":64,"endColumn":21},{"ruleId":"537","severity":1,"message":"549","line":73,"column":31,"nodeType":"539","messageId":"540","endLine":73,"endColumn":33},{"ruleId":"537","severity":1,"message":"538","line":73,"column":72,"nodeType":"539","messageId":"540","endLine":73,"endColumn":74},{"ruleId":"545","severity":1,"message":"600","line":76,"column":8,"nodeType":"547","endLine":76,"endColumn":35,"suggestions":"601"},{"ruleId":"537","severity":1,"message":"549","line":158,"column":33,"nodeType":"539","messageId":"540","endLine":158,"endColumn":35},{"ruleId":"537","severity":1,"message":"538","line":158,"column":74,"nodeType":"539","messageId":"540","endLine":158,"endColumn":76},{"ruleId":"508","severity":1,"message":"526","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":17},{"ruleId":"508","severity":1,"message":"527","line":4,"column":9,"nodeType":"510","messageId":"511","endLine":4,"endColumn":17},{"ruleId":"508","severity":1,"message":"528","line":5,"column":18,"nodeType":"510","messageId":"511","endLine":5,"endColumn":25},{"ruleId":"508","severity":1,"message":"529","line":7,"column":5,"nodeType":"510","messageId":"511","endLine":7,"endColumn":20},{"ruleId":"508","severity":1,"message":"554","line":10,"column":5,"nodeType":"510","messageId":"511","endLine":10,"endColumn":25},{"ruleId":"508","severity":1,"message":"530","line":14,"column":9,"nodeType":"510","messageId":"511","endLine":14,"endColumn":33},{"ruleId":"508","severity":1,"message":"531","line":14,"column":35,"nodeType":"510","messageId":"511","endLine":14,"endColumn":60},{"ruleId":"508","severity":1,"message":"532","line":22,"column":25,"nodeType":"510","messageId":"511","endLine":22,"endColumn":41},{"ruleId":"508","severity":1,"message":"533","line":52,"column":21,"nodeType":"510","messageId":"511","endLine":52,"endColumn":36},{"ruleId":"508","severity":1,"message":"534","line":52,"column":45,"nodeType":"510","messageId":"511","endLine":52,"endColumn":58},{"ruleId":"508","severity":1,"message":"602","line":56,"column":21,"nodeType":"510","messageId":"511","endLine":56,"endColumn":41},{"ruleId":"508","severity":1,"message":"603","line":56,"column":50,"nodeType":"510","messageId":"511","endLine":56,"endColumn":68},{"ruleId":"537","severity":1,"message":"538","line":82,"column":18,"nodeType":"539","messageId":"540","endLine":82,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":86,"column":25,"nodeType":"539","messageId":"540","endLine":86,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":90,"column":25,"nodeType":"539","messageId":"540","endLine":90,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":109,"column":20,"nodeType":"539","messageId":"540","endLine":109,"endColumn":22},{"ruleId":"537","severity":1,"message":"538","line":112,"column":26,"nodeType":"539","messageId":"540","endLine":112,"endColumn":28},{"ruleId":"537","severity":1,"message":"538","line":128,"column":25,"nodeType":"539","messageId":"540","endLine":128,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":130,"column":32,"nodeType":"539","messageId":"540","endLine":130,"endColumn":34},{"ruleId":"537","severity":1,"message":"538","line":149,"column":35,"nodeType":"539","messageId":"540","endLine":149,"endColumn":37},{"ruleId":"537","severity":1,"message":"538","line":151,"column":42,"nodeType":"539","messageId":"540","endLine":151,"endColumn":44},{"ruleId":"545","severity":1,"message":"604","line":255,"column":8,"nodeType":"547","endLine":255,"endColumn":23,"suggestions":"605"},{"ruleId":"537","severity":1,"message":"538","line":277,"column":50,"nodeType":"539","messageId":"540","endLine":277,"endColumn":52},{"ruleId":"537","severity":1,"message":"538","line":283,"column":55,"nodeType":"539","messageId":"540","endLine":283,"endColumn":57},{"ruleId":"537","severity":1,"message":"538","line":315,"column":60,"nodeType":"539","messageId":"540","endLine":315,"endColumn":62},{"ruleId":"537","severity":1,"message":"549","line":316,"column":70,"nodeType":"539","messageId":"540","endLine":316,"endColumn":72},{"ruleId":"508","severity":1,"message":"526","line":3,"column":9,"nodeType":"510","messageId":"511","endLine":3,"endColumn":17},{"ruleId":"508","severity":1,"message":"527","line":4,"column":9,"nodeType":"510","messageId":"511","endLine":4,"endColumn":17},{"ruleId":"508","severity":1,"message":"528","line":5,"column":18,"nodeType":"510","messageId":"511","endLine":5,"endColumn":25},{"ruleId":"508","severity":1,"message":"529","line":7,"column":5,"nodeType":"510","messageId":"511","endLine":7,"endColumn":20},{"ruleId":"508","severity":1,"message":"554","line":11,"column":5,"nodeType":"510","messageId":"511","endLine":11,"endColumn":25},{"ruleId":"508","severity":1,"message":"530","line":14,"column":9,"nodeType":"510","messageId":"511","endLine":14,"endColumn":33},{"ruleId":"508","severity":1,"message":"531","line":14,"column":35,"nodeType":"510","messageId":"511","endLine":14,"endColumn":60},{"ruleId":"508","severity":1,"message":"532","line":22,"column":25,"nodeType":"510","messageId":"511","endLine":22,"endColumn":41},{"ruleId":"508","severity":1,"message":"533","line":53,"column":21,"nodeType":"510","messageId":"511","endLine":53,"endColumn":36},{"ruleId":"508","severity":1,"message":"534","line":53,"column":45,"nodeType":"510","messageId":"511","endLine":53,"endColumn":58},{"ruleId":"508","severity":1,"message":"606","line":57,"column":21,"nodeType":"510","messageId":"511","endLine":57,"endColumn":40},{"ruleId":"508","severity":1,"message":"607","line":57,"column":49,"nodeType":"510","messageId":"511","endLine":57,"endColumn":66},{"ruleId":"537","severity":1,"message":"538","line":80,"column":18,"nodeType":"539","messageId":"540","endLine":80,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":84,"column":25,"nodeType":"539","messageId":"540","endLine":84,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":88,"column":22,"nodeType":"539","messageId":"540","endLine":88,"endColumn":24},{"ruleId":"537","severity":1,"message":"538","line":108,"column":25,"nodeType":"539","messageId":"540","endLine":108,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":110,"column":32,"nodeType":"539","messageId":"540","endLine":110,"endColumn":34},{"ruleId":"537","severity":1,"message":"538","line":112,"column":30,"nodeType":"539","messageId":"540","endLine":112,"endColumn":32},{"ruleId":"545","severity":1,"message":"546","line":212,"column":8,"nodeType":"547","endLine":212,"endColumn":22,"suggestions":"608"},{"ruleId":"537","severity":1,"message":"538","line":234,"column":50,"nodeType":"539","messageId":"540","endLine":234,"endColumn":52},{"ruleId":"537","severity":1,"message":"538","line":240,"column":55,"nodeType":"539","messageId":"540","endLine":240,"endColumn":57},{"ruleId":"537","severity":1,"message":"538","line":264,"column":62,"nodeType":"539","messageId":"540","endLine":264,"endColumn":64},{"ruleId":"537","severity":1,"message":"549","line":265,"column":72,"nodeType":"539","messageId":"540","endLine":265,"endColumn":74},{"ruleId":"508","severity":1,"message":"587","line":2,"column":10,"nodeType":"510","messageId":"511","endLine":2,"endColumn":16},{"ruleId":"508","severity":1,"message":"595","line":2,"column":18,"nodeType":"510","messageId":"511","endLine":2,"endColumn":22},{"ruleId":"508","severity":1,"message":"609","line":22,"column":5,"nodeType":"510","messageId":"511","endLine":22,"endColumn":30},{"ruleId":"508","severity":1,"message":"610","line":63,"column":5,"nodeType":"510","messageId":"511","endLine":63,"endColumn":26},{"ruleId":"537","severity":1,"message":"538","line":167,"column":33,"nodeType":"539","messageId":"540","endLine":167,"endColumn":35},{"ruleId":"537","severity":1,"message":"538","line":168,"column":45,"nodeType":"539","messageId":"540","endLine":168,"endColumn":47},{"ruleId":"537","severity":1,"message":"538","line":169,"column":29,"nodeType":"539","messageId":"540","endLine":169,"endColumn":31},{"ruleId":"537","severity":1,"message":"538","line":192,"column":33,"nodeType":"539","messageId":"540","endLine":192,"endColumn":35},{"ruleId":"537","severity":1,"message":"538","line":193,"column":29,"nodeType":"539","messageId":"540","endLine":193,"endColumn":31},{"ruleId":"537","severity":1,"message":"538","line":217,"column":25,"nodeType":"539","messageId":"540","endLine":217,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":218,"column":33,"nodeType":"539","messageId":"540","endLine":218,"endColumn":35},{"ruleId":"537","severity":1,"message":"538","line":263,"column":33,"nodeType":"539","messageId":"540","endLine":263,"endColumn":35},{"ruleId":"537","severity":1,"message":"538","line":264,"column":29,"nodeType":"539","messageId":"540","endLine":264,"endColumn":31},{"ruleId":"508","severity":1,"message":"611","line":374,"column":17,"nodeType":"510","messageId":"511","endLine":374,"endColumn":21},{"ruleId":"508","severity":1,"message":"612","line":14,"column":5,"nodeType":"510","messageId":"511","endLine":14,"endColumn":20},{"ruleId":"508","severity":1,"message":"613","line":19,"column":5,"nodeType":"510","messageId":"511","endLine":19,"endColumn":24},{"ruleId":"508","severity":1,"message":"614","line":28,"column":5,"nodeType":"510","messageId":"511","endLine":28,"endColumn":24},{"ruleId":"508","severity":1,"message":"574","line":2,"column":10,"nodeType":"510","messageId":"511","endLine":2,"endColumn":14},{"ruleId":"508","severity":1,"message":"559","line":1,"column":16,"nodeType":"510","messageId":"511","endLine":1,"endColumn":24},{"ruleId":"508","severity":1,"message":"521","line":2,"column":9,"nodeType":"510","messageId":"511","endLine":2,"endColumn":22},{"ruleId":"508","severity":1,"message":"519","line":3,"column":24,"nodeType":"510","messageId":"511","endLine":3,"endColumn":27},{"ruleId":"508","severity":1,"message":"550","line":3,"column":29,"nodeType":"510","messageId":"511","endLine":3,"endColumn":32},{"ruleId":"508","severity":1,"message":"562","line":7,"column":8,"nodeType":"510","messageId":"511","endLine":7,"endColumn":16},{"ruleId":"508","severity":1,"message":"564","line":9,"column":5,"nodeType":"510","messageId":"511","endLine":9,"endColumn":17},{"ruleId":"508","severity":1,"message":"615","line":10,"column":5,"nodeType":"510","messageId":"511","endLine":10,"endColumn":18},{"ruleId":"508","severity":1,"message":"616","line":11,"column":5,"nodeType":"510","messageId":"511","endLine":11,"endColumn":18},{"ruleId":"508","severity":1,"message":"529","line":12,"column":5,"nodeType":"510","messageId":"511","endLine":12,"endColumn":20},{"ruleId":"508","severity":1,"message":"617","line":16,"column":9,"nodeType":"510","messageId":"511","endLine":16,"endColumn":29},{"ruleId":"508","severity":1,"message":"618","line":45,"column":66,"nodeType":"510","messageId":"511","endLine":45,"endColumn":79},{"ruleId":"508","severity":1,"message":"619","line":53,"column":12,"nodeType":"510","messageId":"511","endLine":53,"endColumn":20},{"ruleId":"508","severity":1,"message":"568","line":55,"column":9,"nodeType":"510","messageId":"511","endLine":55,"endColumn":16},{"ruleId":"537","severity":1,"message":"538","line":342,"column":78,"nodeType":"539","messageId":"540","endLine":342,"endColumn":80},{"ruleId":"537","severity":1,"message":"538","line":342,"column":109,"nodeType":"539","messageId":"540","endLine":342,"endColumn":111},{"ruleId":"537","severity":1,"message":"538","line":347,"column":95,"nodeType":"539","messageId":"540","endLine":347,"endColumn":97},{"ruleId":"537","severity":1,"message":"538","line":347,"column":136,"nodeType":"539","messageId":"540","endLine":347,"endColumn":138},{"ruleId":"537","severity":1,"message":"538","line":352,"column":95,"nodeType":"539","messageId":"540","endLine":352,"endColumn":97},{"ruleId":"537","severity":1,"message":"538","line":352,"column":136,"nodeType":"539","messageId":"540","endLine":352,"endColumn":138},{"ruleId":"537","severity":1,"message":"538","line":358,"column":99,"nodeType":"539","messageId":"540","endLine":358,"endColumn":101},{"ruleId":"537","severity":1,"message":"538","line":358,"column":140,"nodeType":"539","messageId":"540","endLine":358,"endColumn":142},{"ruleId":"537","severity":1,"message":"538","line":369,"column":74,"nodeType":"539","messageId":"540","endLine":369,"endColumn":76},{"ruleId":"537","severity":1,"message":"538","line":401,"column":100,"nodeType":"539","messageId":"540","endLine":401,"endColumn":102},"no-native-reassign",["620"],"no-negated-in-lhs",["621"],"no-unused-vars","'store2' is assigned a value but never used.","Identifier","unusedVar","'Container' is defined but never used.","'BarChart' is defined but never used.","'DoughnutChart' is defined but never used.","'HorizontalBarChart' is defined but never used.","'LineChart' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Row' is defined but never used.","'NavDropdown' is defined but never used.","'LinkContainer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Doughnut' is defined but never used.","'UserData' is defined but never used.","'ChartJS' is defined but never used.","'listAllProducts' is defined but never used.","'sentimentBarChartReducer' is defined but never used.","'sentimentLineChartReducer' is defined but never used.","'setDefaultLocale' is defined but never used.","'loadingCategory' is assigned a value but never used.","'errorCategory' is assigned a value but never used.","'loadingSentimentCircle' is assigned a value but never used.","'errorSentimentCircle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sentiments'. Either include it or remove the dependency array.","ArrayExpression",["622"],"Expected '!==' and instead saw '!='.","'Col' is defined but never used.","'setUserData' is assigned a value but never used.","'listProductCategories' is defined but never used.","'productsIdName' is defined but never used.","'sentimentCircleChart' is defined but never used.","'Select' is defined but never used.","'DatePicker' is defined but never used.","'Chart' is defined but never used.","'size' is assigned a value but never used.","'useState' is defined but never used.","'Carousel' is defined but never used.","'Image' is defined but never used.","'Paginate' is defined but never used.","'ProductCarousel' is defined but never used.","'listProducts' is defined but never used.","'listTopProducts' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'keyword' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","'Card' is defined but never used.","'errorUserBuyProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["623"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["624"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["625"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["626"],"'useHistory' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'orders' is assigned a value but never used.","'login' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userForgotPassword'. Either include it or remove the dependency array.",["627"],"'Form' is defined but never used.","'forgotPassword' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'reset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userResetPassword'. Either include it or remove the dependency array.",["628"],"'loadingSentimentLine' is assigned a value but never used.","'errorSentimentLine' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentTypeDateFilter' and 'sentiments'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSentimentLineChartData' needs the current value of 'currentTypeDateFilter'.",["629"],"'loadingSentimentBar' is assigned a value but never used.","'errorSentimentBar' is assigned a value but never used.",["630"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'REVIEW_DELETE_REQUEST' is defined but never used.","'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'deleteProduct' is defined but never used.","'createProduct' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'successUpdate' is assigned a value but never used.","'userInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},"Update the dependencies array to be: [sentimentCircle, sentiments]",{"range":"649","text":"650"},"Update the dependencies array to be: [dispatch, userInfo, product, id]",{"range":"651","text":"652"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"653","text":"654"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"655","text":"656"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"657","text":"658"},"Update the dependencies array to be: [userForgotPassword, userForgotPasswordSelector]",{"range":"659","text":"660"},"Update the dependencies array to be: [userResetPassword, userResetPasswordSelector]",{"range":"661","text":"662"},"Update the dependencies array to be: [currentTypeDateFilter, sentimentLine, sentiments]",{"range":"663","text":"664"},"Update the dependencies array to be: [sentimentBar, sentiments]",{"range":"665","text":"666"},[5025,5042],"[sentimentCircle, sentiments]",[1953,1982],"[dispatch, userInfo, product, id]",[1343,1361],"[success, history, order._id, dispatch]",[2294,2348],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1474,1512],"[user, userId, successUpdate, history, dispatch]",[1736,1764],"[userForgotPassword, userForgotPasswordSelector]",[2720,2747],"[userResetPassword, userResetPasswordSelector]",[9139,9154],"[currentTypeDateFilter, sentimentLine, sentiments]",[7242,7256],"[sentimentBar, sentiments]"]